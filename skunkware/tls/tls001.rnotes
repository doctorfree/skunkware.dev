To: TLS001 experimenters

These notes were written for the version of the X11R4 Extended
Feature Supplement which includes Update G to SCO Open Desktop.
Much of what is here applies to the TLS001 cut of the R4 server, but
not all.   Use at your own risk.




					  (r)
			  SCO Open Desktop    X11R4



			 Extended Feature Supplement



			Release	and Installation Notes















			The Santa Cruz Operation, Inc.



















				    - 1	 -




    c 1986 - 1991 The Santa Cruz Operation, Inc.  All rights reserved.

    No part of this publication	may be reproduced, transmitted,	stored in
    a retrieval	system,	nor translated into any	human or computer
    language, in any form or by	any means, electronic, mechanical, mag-
    netic, optical, chemical, manual or	otherwise, without the prior writ-
    ten	permission of the copyright owner, The Santa Cruz Operation, Inc.,
    400	Encinal, Santa Cruz, California, 95061,	USA.  Copyright	infringe-
    ment is a serious matter under the United States and foreign Copyright
    Laws.

    The	copyrighted software that accompanies this manual is licensed to
    the	End User only for use in strict	accordance with	the End	User
    License Agreement, which License should be read carefully before com-
    mencing use	of the software.  Information in this document is subject
    to change without notice and does not represent a commitment on the
    part of The	Santa Cruz Operation, Inc.

    The	following legend applies to all	contracts and subcontracts
    governed by	the Rights in Technical	Data and Computer Software Clause
    of the United States Department of Defense Federal Acquisition Regula-
    tions Supplement:

    RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the
    government is subject to restrictions as set forth in subparagraph (c)
    (1)	(ii) of	the Rights in Technical	Data and Computer Software Clause
    at DFARS 52.227-7013.  The Santa Cruz Operation, Inc., 400 Encinal
    Street, Santa Cruz,	California 95061, U.S.A.


    SCO, the SCO logo and The Santa Cruz Operation are registered trade-
    marks of The Santa Cruz Operation, Inc. in the U.S.A. and other coun-
    tries.
    ALR	is a trademark of Advanced Logic Research, Inc.
    AT&T is a trademark	of American Telephone &	Telegraph Information Sys-
    tems.
    COMPAQ is a	registered trademark of	Compaq Computer	Corporation.
    Cornerstone	is a registered	trademark of Cornerstone Technology.
    Corollary is a registered trademark	of Corollary, Inc.
    GRiD is a registered trademark of GRiD Systems Corporation.
    Hercules is	a registered trademark of Hercules Computer Corporation,
    Inc.
    HP is a registered trademark of Hewlett-Packard Corporation.
    IBM	is a registered	trademark of International Business Machines Cor-
    poration.
    Open Desktop is a registered trademark of The Santa	Cruz Operation,
    Inc.
    Paradise and Paradise VGA are registered trademarks	of Paradise Sys-
    tems Inc.
    Renaissance	Rendition is a trademark of Systems Solutions Inc.
    Texas Instruments is a registered trademark	of Texas Instruments.
    Toshiba is a registered trademark of Toshiba Corporation.
    UNIX is a registered trademark of Unix System Laboratories Inc. in the
    U.S.A and other countries.
    Video Seven	is a trademark of Headland Technology, Inc.
    XENIX, Microsoft, and MS-DOS are registered	trademarks of Microsoft
    Corporation	in the U.S.A. and other	countries.
    X Window System is a trademark of the Massachusetts	Institute of Tech-
    nology.


				    - 2	 -




    Xsight is a	registered trademark of	Locus Computing	Corporation.

    Document version: 4.1.0d

    Date: 19 December 1991




				    - 3	 -




             Contents

             Preface   1
               Contents of This EFS  1
                  Software Requirements   2
                  About these Release Notes   2
                  Conventions Used in This Guide   2


             Chapter 1  Installing the EFS  1
               Before You Install  1
                  Back up the Color Database   2
                  Back up the Font Alias Files   2
                  Back up Keyboard Configuration Files   3
                  Back up the Grafinfo Files   3
               Installation Procedure  3


             Chapter 2  Configuring the Server  1
               Video Configuration  1
               Adding New Colors to the Server  2
               Adding New Fonts to the Server  3
               Configuring the Server Keyboard  4


             Chapter 3  Release Information  1
               New Features  1
                  Performance Improvements   1
                  Server Bankswitching   1
                  Dynamically Loadable Graphics Adapter Drivers   1
                  Monitor Information Files   2
                  New Grafinfo File Format   2
                  X11R4 Server Utilities   2
                  New Default Screen Switch Key Sequence   3
                  New Server Command Line Option   3
                  New Color Database   3
                  New Font Database   3
                  New fonts.alias File Format   3
                  X11 Release 4 Server Extensions   4
                  MIT-MAGIC-COOKIE Authorization Protocol   4
                  Standard Colormap Properties   4

            Keyboard Configuraton  5
               Xsco.cfg Configuration File   5
               xsconfig Source Files   5
               International Keyboard Support   6
            Running R3 Clients with the Xsco Server  6
            Supported Graphics Adapters  7
               Supported Monitors   21
            Known Limitations  22
               34010-based Graphics Adapter Support   22
               Server Virtual Screen Option   22
               xinit Doesn't Start any Clients   23
               Erratic Lock Keys Behavior   23
               Lost Error Messages   23
               Pointer Does Not Disappear from Merge   23


          Chapter 4  Creating Moninfo Files  1
            Moninfo Conventions  1
            Monitor Information File Structure  2
            Moninfo Parameters  3
            Sample Moninfo File  4


          Chapter 5  Creating Grafinfo Files  1
            Introduction  1
            Grafinfo Conventions  2
            Differences Between Xsight and Xsco Grafinfo Files  3
               InitGraphics Procedure Replaced by DATA Specification   3
               Custom Parameter Definitions   3
               Bankswitch MAPTYPE Parameter   3
               PIXRESX and PIXRESY Parameters   4
            Writing a grafinfo File  4
               Upgrading an Existing grafinfo File   5
            Graphics Information File Structure  6
               Comments   7
            Grafinfo Header  7
            Grafinfo Parameters  13
               Parameter Descriptions   15
            Grafinfo Procedures  22
            Grafinfo Commands  22
               Command Descriptions   23
            Sample Grafinfo File  27





























































				    - 1	 -

































































				    - 2	 -




    These Release and Installation Notes document the X11R4 EFS	(Extended
    Feature Supplement)	product.  Use this product with	SCO Open
    Desktop(r) 1.1 with	Update G.

    The	software provided in this EFS includes an X11 Release 4	server,
    Xsco, that replaces	the existing X11 Release 3 server, Xsight(r). It
    provides additional	functionality for vendor-specific graphics
    adapters.

    The	software contained in this release offers the following	features:

       o faster	and improved X display server

       o server	support	for IBM(r) XGA and Olivetti EVC-1 graphics
	 adapters

    *********************************************************************
    NOTE

    This EFS does not support EGA graphics adapters or 34010-based graph-
    ics	adapters such as the Compaq(r) AGS, HP IGC, and	Renaissance Rendi-
    tion.  If you need to run an X server with either of these types of
    graphics adapter, do not install this EFS.	The Xsight server included
    in	1.1 supports both EGA and 34010-based graphics adapters.
    *********************************************************************


    0.1	 Contents of This EFS
    The X11R4 EFS consists of the following:

       o the Xsco server and related configuration utilities and files

       o online	manual pages for the server configuration utilities

       o these Release and Installation	Notes

    Keep all floppy diskettes until the	next release of	 or your operating
    system.  You may need to install or	reinstall the packages if you
    upgrade the	software or hardware on	your system.

    0.1.1  Software Requirements

    This EFS can be installed on systems running Release 1.1, Update G,	of
    SCO	Open Desktop. The EFS can be also be installed on
     systems running SCO MPX, Update A.















				    - 1	 -


    X11R4 EFS  Release and Installation	Notes

    0.1.2  About these Release Notes

    The	X11R4 EFS Release and Installation Notes are divided into the fol-
    lowing chapters:

       o Chapter 1, ``Installing the EFS,'' describes how to install the
	 software provided in the X11R4	EFS.

       o Chapter 2, ``Configuring the Server,''	describes how to configure
	 the server for	different video	systems	and how	to update
	 preserved color and font databases created for	the Xsight server.

       o Chapter 3, ``Release Information,'' describes features	and
	 enhancements specific to this release.

       o Chapter 4, ``Creating Moninfo Files,''	describes how to create
	 monitor information files for the Xsco	server.

       o Chapter 5, ``Creating Grafinfo	Files,'' describes how to create
	 graphics information files for	the Xsco server.

    0.1.3  Conventions Used in This Guide

    This guide uses the	following notational conventions:

    bold      represents commands, command options, parameters in files,
	      data structures, and special keys	that you press.	 For exam-
	      ple, xset	-bc is a complete command line that is executed
	      when you press <Return>.	<CTL>x means to	hold down the Con-
	      trol key and press the x key, then release them.

    italics   represents files and directories,	as well	as variables that
	      you supply.  For example,	in the command argument
	      path:pathname, you replace pathname with an actual pathname
	      when you type the	command.

    Courier   represents system	responses, excerpts from files,	and pro-
	      gramming examples.  For example, the following is	an excerpt
	      from a file:

	       DATA
		  {
		  XDRIVER     =	"dfb";
		  VISUAL      =	"PseudoColor";
		  DEPTH	      =	8;
		  PIXBYTES    =	320;
		  PIXWIDTH    =	320;
		  PIXHEIGHT   =	200;
		  PIXBITS     =	8;
		  }











				    - 2	 -




    The	X11R4 EFS installs only	on SCO Open Desktop, Release 1.1, Update G
    systems.  No serialization is required to install this EFS.

    0.1	 Before	You Install

    Installing this EFS	replaces the X11 Release 3 environment on your SCO
    Open Desktop system.  It should not	be removed.  If	you anticipate the
    need to revert to your original system, back up your root directory
    before installing this EFS.

    *********************************************************************
    NOTE

    If you intend to install the SCO Open Desktop International	Supple-
    ment, install it now. Installing the International Supplement after
    installing this EFS	causes error messages and improper keyboard confi-
    guration. For details on the new international keyboard support, see
    Chapter 3, ``Release Information.''
    *********************************************************************


    There are several files in your X environment that you may have cus-
    tomized.  This EFS replaces	those files with files that adhere to new
    formats.  The precautions described	in this	section	are recommended	if
    you:

       o added colors to the original server color database

       o added fonts to	the server or modified the original fonts.alias
	 file

       o modified your keyboard	configuration files

       o added graphics	information (grafinfo) files to	the system

    During installation, existing Xsight server	configuration files are
    moved to the /usr/lib/custom/save/xsight directory.	 If you	want to
    move the Xsight configuration files	to another filesystem, set your
    CONFIG_SAVE	environment variable to	the desired path before	installing
    this EFS. Your Xsight configuration	files will then	be moved to
    $CONFIG_SAVE/xsight	when you install this EFS.

    0.1.1  Back	up the Color Database

    This EFS installs a	new color database and color database compiler.
    The	/usr/lib/X11/rgb.txt file is moved during installation.	 If you
    added new colors to	the color database supplied with SCO Open Desktop
    Release 1.1, Update	G, you can retrieve your changes from the old
    rgb.txt file and merge them	into the new rgb.txt file.  For	details,
    see	``Adding New Colors to the Server,'' in	Chapter	2, ``Configuring
    the	Server.''





    *********************************************************************
    NOTE



				    - 1	 -


    X11R4 EFS Release and Installation Notes

    Although the X11 Release 4 version of the rgb color	compiler accepts
    old	rgb.txt	files, the Xsco	server does not	recognize the color data-
    base files generated by the	X11 Release 3 version of rgb, rgb.dat and
    rgb.map.  There is no need to back up these	two files.
    *********************************************************************


    0.1.2  Back	up the Font Alias Files

    The	fonts.alias file format	used by	the Xsco server	has changed since
    the	Xsight server.

    When you install the EFS, the following fonts.alias	files are replaced
    by the X11R4 fonts.alias files:

       o /usr/lib/X11/fonts/misc/fonts.alias

       o /usr/lib/X11/fonts/75dpi/fonts.alias

       o /usr/lib/X11/fonts/100dpi/fonts.alias
    After installing the EFS, you can restore your old font aliases.  For
    details, see ``Adding New Fonts to the Server,'' in	Chapter	2, ``Con-
    figuring the Server.''

    *********************************************************************
    NOTE

    Xsight fonts.alias files are not compatible	with Xsco fonts.alias
    files.  If you created your	own font directories with their	own
    fonts.alias	files, you must	also modify these files	to adhere to the
    new	file format.
    *********************************************************************


    0.1.3  Back	up Keyboard Configuration Files

    When you install this EFS, the following directories are moved to
    /usr/lib/custom/save/xsight:

       o /usr/lib/X11/keymaps

       o /usr/lib/X11/xsconfig
    A new /usr/lib/X11/xsconfig	directory is installed but the
    /usr/lib/X11/keymaps directory is not replaced.  After installing this
    EFS, you can merge portions	of old keyboard	configuration files into
    the	new keyboard configuration files.  For details,	see ``Configuring
    the	Server Keyboard,'' in Chapter 2, ``Configuring the Server.''

    0.1.4  Back	up the Grafinfo	Files

    When you install this EFS, the entire /usr/lib/grafinfo directory is
    replaced with graphics information (grafinfo) files	that adhere to a
    new	file format.  After installing the EFS,	you can	merge portions of
    your X11R3 grafinfo	files into the new grafinfo files or update the
    X11R3 grafinfo files to the	new file format, and then re-configure the
    server for your graphics adapter.  For details, see	the following:

       o ``Video Configuration'' in Chapter 2, ``Configuring the Server''



				    - 2	 -




       o ``Upgrading X11R3 Grafinfo Files'' in Chapter 5, ``Creating
	 Grafinfo Files.''

    0.2	 Installation Procedure

    The	following procedure installs the X11R4 Server EFS:


     1.	 If you	plan to	install	the SCO	Open Desktop International Supple-
	 ment, install it now.

     2.	 Back up your root directory.

     3.	 If you	have not yet installed SCO Open	Desktop, Release 1.1,
	 Update	G, install it using the	procedures in the SCO Open Desk-
	 top, Release 1.1, Update G SCO	Open Desktop Installation Guide
	 and Release and Installation Notes.

     4.	 Log in	as root.

     5.	 Bring the system to system maintenance	mode after telling your
	 users to log off.  To enter system maintenance	mode, type init	1
	 and press <Return>.

     6.	 When asked if you want	to move	the system console to
	 /dev/console, confirm by typing y, then pressing <Return>.

     7.	 Enter the root	password at the	password prompt.

     8.	 Execute custom	from the command line by typing	custom and press-
	 ing <Return>, or from sysadmsh	by making the following	sysadmsh
	 selection:

	      System->Software



     9.	 Choose	Install, A New Product,	and Entire Product.  When you are
	 prompted to insert the	requested volume, insert the first EFS
	 disk, then select Continue.  Eventually, you are prompted again
	 for the first floppy volume.

    10.	 Select	Continue.  It takes a few minutes for the files	to be
	 extracted.

    11.	 Each time you are prompted for	a floppy volume, insert	the
	 requested disk	and press <Return>.  There are four disks in the
	 EFS disk set.	After several messages indicating the
	 installation's	progress, the video configuration menu (vidconf)
	 appears.

    12.	 To select the appropriate video configuration,	select Update,
	 then specify the video	adapter, resolution and	color settings,
	 monitor type, and (optionally)	a specific console multiscreen for
	 the configuration.

    13.	 Select	Accept.




				    - 3	 -


    X11R4 EFS Release and Installation Notes

    14.	 If desired, select Update and configure other console mul-
	 tiscreens.

	 If you	find no	entries	for your particular graphics adapter and
	 monitor, you may be able to configure the server for an
	 equivalent device, or you may need to add a new grafinfo or
	 moninfo file.	For details, see ``Video Configuration'' in
	 Chapter 2, ``Configuring the Server.''

    15.	 When the vidconf menu returns,	select Quit, then Save the new
	 video configuration.  The system reads	the new	graphics informa-
	 tion files and	then asks if you want to create	a new kernel.

    16.	 Type y, then press <Return>.  The system asks if you want to boot
	 from the new kernel after the operating system	has been rebuilt.

    17.	 Type y, then press <Return>.  The system asks if you want to
	 rebuild the kernel environment.

    18.	 Type y, then press <Return>.

    19.	 When prompted,	press <Return> to exit.

    20.	 When prompted,	press any key.	The custom menu	returns.

    21.	 Quit custom.

    22.	 When the system prompt	returns, type init 6, then press <Return>.

    23.	 When the boot prompt appears, press <Return>.	You are	given the
	 option	of going into multiuser	mode.

    24.	 Press <CTL>D.

	 The EFS is now	installed.  Store the X11R4 EFS	distribution media
	 in a safe place.  If an accident or a hardware	failure	damages
	 the X11R4 EFS files on	your hard disk,	you will need the distri-
	 bution	media to re-install the	X11R4 EFS.

    To configure the Xsco server, see Chapter 2, ``Configuring the
    Server.''




















				    - 4	 -




    This chapter describes Xsco	configuration issues that are not
    addressed in the
     documentation.  The following topics are covered:

       o changing the video configuration


       o adding	new colors to the server


       o adding	new fonts to the server


       o configuring the keyboard
    For	information on other configuration subjects, such as localizing
    the	server for different countries,	see the	, Release 1.1, Update G,
    Release and	Installation Notes.

    0.1	 Video Configuration

    This section describes how to configure the	Xsco server for	any of the
    graphics adapters and monitors supported by	the X11R4 EFS.

    The	Xsco server provides support for many popular graphics adapters
    through dynamically-linked graphics	adapter	drivers	and graphics
    information	(grafinfo) files. If your graphics adapter is not listed
    in Table 3.1, ``Supported Graphics Adapters,'' in Chapter 3, ``Release
    Information,'' look	for an equivalent adapter in the table.	 You may
    be able to use an existing grafinfo	file or	create a new grafinfo file
    based on an	existing file.	For  details about the grafinfo	file for-
    mat, see Chapter 5,	``Creating Grafinfo Files.''

    To run the video configuration program:

      1.  Log in as root.


      2.  Type mkdev graphics, then press <Return>.


	  The Video Configuration screen appears.

      3.  Type u to select Update.

	  The Video Configuration screen appears.

      4.  Select the desired adapter type, mode, and monitor model.  If
	  you are not sure which monitor model most closely resembles your
	  own, select the ``Standard VGA'' model.

    *********************************************************************
    NOTE

    If you have	a 8514/a-based graphics	adapter	that is	exactly	register-
    compatible with the	IBM 8514/a and is listed as a supported	graphics
    adapter in Table 3.1 in Chapter 3, ``Release Information,''	then you
    can	use one	of the IBM 8514/a modes.  For example, all 8514/a clone
    video adapters support a non-interlaced 1024x768 resolution.  If you
    have an interlaced monitor and your	graphics adapter supports that


				    - 1	 -


    X11R4 EFS Release and Installation Notes

    mode, then select the IBM 8514/a 1024x768 interlaced mode.
    *********************************************************************


      5.  To assign the	selected graphics adapter mode to a specific con-
	  sole multiscreen, select Specify, then select	the desired con-
	  sole multiscreen from	the pop-up list.

      6.  Select Accept.

      7.  If desired, select additional	graphics adapter modes for other
	  terminals.

      8.  When you have	configured the terminals, type q to quit mkdev
	  graphics.

      9.  Select Save by pressing s when prompted.

    0.2	 Adding	New Colors to the Server

    The	colors supplied	with this EFS are identical to the colors supplied
    with , Release 1.1,	Update G.  The X11R4 color database consists of
    different files, and is compiled by	a different version of the rgb(X)
    program.  The rgb.txt file format, however,	has not	changed.

    When you install this EFS, your old	rgb.txt	is moved to
    /usr/lib/custom/save/xsight/usr/lib/X11/rgb.txt.  If you added new
    colors to the Xsight server	before installing this EFS, you	can add
    your custom	colors to the Xsco server.  To add restore colors from an
    X11R3 rgb.txt file:

      1.  Copy the color definitions from the old rgb.txt file to the new
	  /usr/lib/X11/rgb.txt file.

      2.  Run rgb < rgb.txt.

	  rgb compiles the text	file and generates two color database
	  files:  /usr/lib/X11/rgb.dir and /usr/lib/X11/rgb.pag.

      3.  To verify the	contents of the	new color database, use	the
	  showrgb utility.  For	details, refer to the showrgb(X) manual
	  page.

    *********************************************************************
    NOTE

    Although the preceding instructions	assume the existence of	a color
    text file named rgb.txt, the filename is not important; rgb	compiles
    the	color database from standard input.  Similarly,	rgb can	generate
    color database files with names other than rgb.dir and rgb.pag.  For
    details on the new rgb program, refer to the rgb(X)	manual page.
    *********************************************************************




    0.3	 Adding	New Fonts to the Server




				    - 2	 -




    This EFS includes many new fonts and changes the format of the
    fonts.alias	file.  Consequently, X11R3 fonts.alias files cannot be
    used with the X11R4	Xsco server.

    The	order of the data fields in each line is reversed.  The	old format
    was:

	 fontname	 alias

    The	new format is:

	 alias	      fontname

    If you made	copies of your fonts.alias files before	installing this
    EFS, you can add your custom font aliases to the Xsco server.  To
    restore custom font	aliases:

      1.  Edit the custom lines	in your	old fonts.alias	files to match the
	  new format.

      2.  Add the updated lines	to the new fonts.alias files.

      3.  Run the mkfontdir program. For details, see the mkfontdir(X)
	  manual page.

      4.  If the server	is running, run	xset fp	rehash.	 Otherwise, the
	  new font aliases will	be available the next time you launch the
	  server.

    0.4	 Configuring the Server	Keyboard

    For	most purposes, you can configure the Xsco server keyboard with the
    xsconfig.sh	script as described in the xsconfig(X) online manual page
    and	in ``Keyboard Configuration'' in Chapter 3, ``Release Informa-
    tion.''

    When you install this EFS, the keyboard map	files in
    /usr/lib/X11/keymaps are removed and the files in
    /usr/lib/X11/xsconfig are replaced by new files.  If you modified your
    xsconfig source files before installing this EFS, you may merge por-
    tions of those files into the new source files in
    /usr/lib/X11/xsconfig.  Because xsconfig.sh	uses the default source
    files supplied in /usr/lib/X11/xsconfig, you are advised to	modify the
    new	source files rather than add old source	files to the xsconfig com-
    mand line.

    *********************************************************************
    NOTE

    Do not use the old keymap files in the manner described in the  11,
    Update G Release and Installation Notes because all	the keycodes
    greater than 54 are	incorrect in those files.
    *********************************************************************

    If you customized any of the the files in the /usr/lib/X11/keymaps
    directory you can preserve your changes with the following steps:

      1.  Extract your custom entries from the modified	keymap file.



				    - 3	 -


    X11R4 EFS Release and Installation Notes

      2.  Verify that each keycode in your entries has not changed for
	  Xsco by comparing the	old keycode assignment with the	new xscon-
	  fig source files in the /usr/lib/X11/xsconfig	directory.

      3.  To modify the	Xsco server's keyboard map while it is running,
	  execute the following	command:

		  xmodmap -e expression

	  expression is	a line of text that you	extracted from your old
	  keymaps file.

      4.  To add your custom key mappings to the server	configuration
	  file,	convert	each key mapping expression to the xsconfig source
	  file format described	in the xsconfig(X) online manual page, add
	  them to /usr/lib/X11/xsconfig/default.kbd, then run xsconfig.













































				    - 4	 -





    0.1	 New Features

    The	following are new features of the X11 Release 4	Xsco server.

    0.1.1  Performance Improvements

    The	Xsco server, based on MIT X11 Release 4, is faster than	the Xsight
    server.  This improvement is particularly noticeable during	stippled-
    fill operations.

    0.1.2  Server Bankswitching

    The	Xsco server includes bankswitching drivers to allow access to the
    entire video memory	of most	VGA graphics adapters. This allows the
    server to operate in higher	resolutions with more colors.

    0.1.3  Dynamically Loadable	Graphics Adapter Drivers

    The	Xsco server includes a dynamic link kit	that allows device drivers
    to be linked to the	server at runtime.  As a result, drivers for new
    graphics adapters can be added to the existing server instead of
    replacing the entire server.

    Because the	Xsco server only loads the graphics adapter drivers it
    needs for a	specific system, it requires much less memory.

    0.1.4  Monitor Information Files

    The	Xsco server uses monitor information (moninfo) files to	obtain
    monitor-specific parameters, such as height	and width.  For	details	on
    moninfo files, see Chapter 4, ``Creating Moninfo Files.''

    0.1.5  New Grafinfo	File Format

    The	Xsco  graphics information (grafinfo) file format is different
    than the Xsight grafinfo file format.  For a complete description of
    the	new file format, see Chapter 5,	``Creating Grafinfo Files.''

    0.1.6  X11R4 Server	Utilities

    This EFS includes X11R4 versions of	the following server utilities:

       o bdftosnf

       o clean_screen

       o mkfontdir

       o rgb

       o showrgb

       o showsnf


       o xauth




				    - 1	 -


    X11R4 Server EFS Release and Installation Notes

       o xhost

       o xinit

       o xmodmap

       o xsconfig

       o xset

       o xswkey

    0.1.7  New Default Screen Switch Key Sequence

    To switch away from	the Xsco server	to another console multiscreen,
    press <CTL><Alt>-Fn.  This is the new default key sequence.	 To change
    the	key sequence, run the xswkey(X)	utility.  For details on xswkey,
    refer to the online	manual page.

    0.1.8  New Server Command Line Option

    The	-analog	and -noanalog options have been	replaced by a single
    option, -static.  For details, refer to the	Xsco manual page.

    0.1.9  New Color Database

    The	X11R4 version of the rgb color compiler	accepts	the same input
    file format	as the X11R3 version, but it produces two new color data-
    base files:	 /usr/lib/X11/rgb.dir and /usr/lib/X11/rgb.pag.	 These
    files replace the color database files generated by	the X11R3 version
    of rgb, /usr/lib/X11/rgb.dat and /usr/lib/X11/rgb.map.

    0.1.10  New	Font Database

    The	font database included with this EFS increases the number of fonts
    that were previously available with	the Xsight server.  In addition	to
    the	six font families (Courier, Helvetica, New Century Schoolbook(r),
    Symbol, and	Times) included	with the Xsight	server,	the X11R4 font
    database provides two more font families (Lucida(r)	and the	Clean fam-
    ily	of fixed-width fonts) and many other special purpose fonts, such
    as the Greek Symbol	font, the cursor font, the OPEN	LOOKTM cursor and
    glyph fonts, and Kana and Kanji Japanese fonts.

    Files for the supported fonts are stored in	the following three sub-
    directories	to the /usr/lib/X11/fonts directory:  misc, 75dpi,  and
    100dpi.

    0.1.11  New	fonts.alias File Format

    The	fonts.alias files that allow the server	to understand short font
    names use a	new file format.  For details on the new format, see
    ``Adding New Fonts to the Server,''	in Chapter 2, ``Configuring the
    Server.''



    0.1.12  X11	Release	4 Server Extensions




				    - 2	 -




    The	Xsco server provides the NonRectangular	Shape Window extension to
    X, which allows the	creation of arbitrarily	shaped windows.	 Window
    shapes can be defined by a list of rectangles, a bitmap mask, or a
    combination	of regions.  To	see the	effect of this extension, run
    xeyes or oclock with the Xsco server.

    The	Xsco server also provides the X	Test extension to X, which allows
    clients to send user events	among themselves.  This	extension is usu-
    ally used for test purposes.

    *********************************************************************
    NOTE

    Developers interested in creating clients that take	advantage of the
    NonRectangular Shape Window	or X Test extensions can utilize C
    libraries for these	extensions in SCO Open Desktop Release 1.1
    Development	System.
    *********************************************************************

    The	Xsco server also provides the following	additional extensions.
    Using these	extensions may result in unanticipated or undesired
    behavior.  SCO does	not provide developer support for these	exten-
    sions.

       o The Multi-Buffer extension provides for smoother movement or ani-
	 mation	on your	display.  Some clients include an option to access
	 this extension.  For example, the ico client uses the -dbl option
	 to activate multi-buffering on	the display.  It is important to
	 note, however,	that using this	extension can result in	a decrease
	 in system performance.

       o The Shared Memory extension allows images and pixmaps to be
	 shared	between	the Xsco server	and X clients running on the same
	 machine.


    0.1.13  MIT-MAGIC-COOKIE Authorization Protocol

    The	Xsco server supports a new authorization protocol, called MIT-
    MAGIC-COOKIE-1.  This protocol provides tighter security than the
    security offered by	the xhost utility used by the R3 server.  This
    protocol only works	with Release 4 clients.	 You must continue to use
    the	xhost utility if you run Release 3 clients.


    0.1.14  Standard Colormap Properties

    The	Xsco server now	creates	standard colormap properties. The standard
    colormap properties	define a set of	commonly used colormaps.  Applica-
    tions can then share these colormaps and provide a more consistent
    user interface. Use	the xstdcmap client to create these colormaps and
    properties.




    0.2	 Keyboard Configuraton




				    - 3	 -


    X11R4 Server EFS Release and Installation Notes

    The	Xsco server introduces major changes to	server configuration:

       o new server configuration file

       o new source files for the xsconfig utility

       o new international keyboard support files


    0.2.1  Xsco.cfg Configuration File

    The	Xsco server uses a different configuration file	than the Xsight
    server. The	new configuration file,	.Xsco.cfg, can be placed in
    /usr/lib/X11 for system-wide use, or individual users can keep custom-
    ized copies	of .Xsco.cfg in	their home directories.

    Use	the xsconfig(X)	utility	to create the server configuration file.
    Use	the xmodmap(X) utitity to modify server	key and	mouse button map-
    ping when Xsco is running.


    0.2.2  xsconfig Source Files

    The	source files supplied in this EFS for xsconfig have been reorgan-
    ized and renamed to	reflect	the type of configuration data they con-
    tain.  Button bindings and monitor parameters are no longer	specified
    in xsconfig	source files.  As a result, source files should	not
    include ``[buttons]'' or ``[parameters]'' sections.	 To modify button
    bindings use the xmodmap utility. Monitor parameters are now specified
    in monitor information (moninfo) files, as described in Chapter 4,
    ``Creating Moninfo Files.''

    For	convenience, this EFS includes a shell script,
    /usr/lib/X11/xsconfig/xsconfig.sh, that generates a	configuration file
    from default source	files.	If xsconfig.sh is run with no command line
    arguments, it creates /usr/lib/X11/xsconfig/.Xsco.cfg from the follow-
    ing	source files:

    /usr/lib/X11/xsconfig/config.txt
    /usr/lib/X11/xsconfig/default.kbd
    /usr/lib/X11/xsconfig/misc.kbd
    /usr/lib/X11/xsconfig/mod.usa.kbd
    /usr/lib/X11/xsconfig/trans101.kbd
    /usr/lib/X11/xsconfig/keysymdef.h

    xsconfig.sh	also accepts command line arguments, but only for use with
    the	 International Supplement.  Details on international keyboard sup-
    port follow.

    0.2.3  International Keyboard Support

    This EFS changes the way you configure the server for international
    keyboards.	One major change is the	elimination of keymap files, and
    the	/usr/lib/X11/keymaps directory,	which provided rudimentary inter-
    national keyboard support for the Xsight server on systems equipped
    with , Update G without the	 international supplement.  Consequently,
    the	international keyboard configuration procedures	described in the
    International Supplement cover letter and in the  1.1 Update G Release
    and	Installation Notes is obsolete.


				    - 4	 -





    To configure the Xsco server for non-U.S. keyboards, you must have the
    International Supplement.  The International Supplement contains a
    version of the mapkey(M) utility that generates source files for
    xsconfig based on the same keyboard	configuration file used	by the
    console. This feature allows you to	create configuration files for
    specific keyboards that are	consistent with	the console configuration.

    *********************************************************************
    NOTE

    Be sure to install the International Supplement before you install
    this EFS.
    *********************************************************************


    Instead of using a static file from	/usr/lib/X11/keymaps, recommended
    practice is	to create a new	xsconfig source	file with the following
    command:

    mapkey-c csxmap_file keyboard_file > mapkey.kbd

    csxmap_file	is a ``character set to	X'' file from
    /usr/lib/X11/csxmaps.  keyboard_file is a file from	/usr/lib/keyboard,
    and	should be the same file	used by	the console.  This system ensures
    that the X server keyboard uses the	same keyboard mapping as the con-
    sole keyboard, providing for a more	consistent interface when using
    the	 operating system and X.

    0.3	 Running R3 Clients with the Xsco Server

    If you plan	to run certain X11R3 clients, such as the X11R3	version	of
    xterm, with	the Xsco server, you may need to enable	the server's bug
    compatibility mode by running xset bc.  This prevents some R3 clients
    from crashing when they run	with the Xsco server.  For details on the
    R3 client/R4 server	compatibility issue, refer to the xset(X) manual
    page.

    0.4	 Supported Graphics Adapters

    Table 3.1 lists the	graphics adapter modes supported by this EFS.  Not
    all	graphics adapters support the same combinations	of resolutions and
    modes.

    If your graphics adapter is	not listed in Table 3.1, you may still use
    it if it is	equivalent to a	supported graphics adapter. To determine
    whether your adapter is supported, consult your graphics adapter docu-
    mentation for details about	its class (for example,	VGA, XGA, and so
    on)	and supported resolutions.  If you find	an adapter in Table 3.1
    that shares	the same class and at least one	common resolution, you can
    configure Xsco for your adapter but	must first create a new	grafinfo
    file.  For details on creating grafinfo files, see Chapter 5, ``Creat-
    ing	Grafinfo Files.''

    The	list of	adapters in Table 3.1 represents only those graphics
    adapters that are supported	by graphics information	files in this EFS.
    Other models may be	supported by writing new grafinfo files.  This
    list will also be extended as new graphics adapter drivers become
    available.	Models marked with an asterisk (*) are known to	work, but


				    - 5	 -


    X11R4 Server EFS Release and Installation Notes

    have not been thoroughly tested.
		    TABLE 1.  Supported	Graphics Adapters



























































				    - 6	 -





    _______________________________________________________________________
    |		  |		    |					   |
    |Vendor	  |Model	    |Mode				   |
    |_____________|_________________|______________________________________|
    |		  |		    |					   |
    |AST	  |VGA Plus	    |640x350 16	color			   |
    |		  |		    |640x480 16	color			   |
    |		  |		    |800x600 16	color			   |
    |_____________|_________________|______________________________________|
    |ATI	  |VGA Wonder	    |640x350 16	color			   |
    |		  |		    |640x480 16	color			   |
    |		  |		    |V5	800x600	16 color		   |
    |		  |		    |V4	800x600	16 color		   |
    |		  |		    |V3	800x600	16 color		   |
    |_____________|_________________|______________________________________|
    |ATI	  |VGA Wonder Plus  |640x480 16	color -	72 Hz		   |
    |		  |		    |800x600 16	color -	56 Hz		   |
    |		  |		    |800x600 16	color -	60 Hz		   |
    |		  |		    |800x600 16	color -	72 Hz		   |
    |		  |		    |800x600 256 color - 60 Hz		   |
    |		  |		    |1024x768 16 color - 60 Hz interlaced  |
    |		  |		    |1024x768 16 color (banked)	interlaced |
    |		  |		    |1024x768 256 color			   |
    |_____________|_________________|______________________________________|
    |ATI	  |Ultra 512k	    |640x480 16	color			   |
    |		  |		    |640x480 256 color			   |
    |		  |		    |1024x768 16 color 60 Hz		   |
    |		  |		    |1024x768 16 color 70 Hz		   |
    |		  |		    |1024x768 16 color 72 Hz		   |
    |_____________|_________________|______________________________________|

			   (Continued on next page)
		    TABLE 2.  Supported	Graphics Adapters

				 (Continued)

























				    - 7	 -


    X11R4 Server EFS Release and Installation Notes


	_____________________________________________________________
	|	      |			 |			     |
	|Vendor	      |Model		 |Mode			     |
	|_____________|__________________|___________________________|
	|ATI	      |Ultra 1M		 |640x480 16 color - 60	Hz   |
	|	      |			 |640x480 256 color - 60 Hz  |
	|	      |			 |1024x768 16 color - 60 Hz  |
	|	      |			 |1024x768 16 color - 70 Hz  |
	|	      |			 |1024x768 16 color - 72 Hz  |
	|	      |			 |1024x768 256 color - 60 Hz |
	|	      |			 |1024x768 256 color - 70 Hz |
	|	      |			 |1024x768 256 color - 72 Hz |
	|_____________|__________________|___________________________|
	|Bull	      |ProStation 25i *	 |640x350 16 color	     |
	|	      |			 |640x480 16 color	     |
	|	      |			 |800x600 16 color	     |
	|	      |			 |1024x768 16 color	     |
	|_____________|__________________|___________________________|
	|Chips and    |451 *		 |640x480 16 color	     |
	|Technolo-    |			 |			     |
	|gies	      |			 |			     |
	|	      |			 |800x600 16 color	     |
	|_____________|__________________|___________________________|
	|Chips and    |452 *		 |640x480 16 color	     |
	|Technolo-    |			 |			     |
	|gies	      |			 |			     |
	|	      |			 |720x540 16 color	     |
	|	      |			 |800x600 16 color	     |
	|	      |			 |960x720 16 color	     |
	|	      |			 |1024x768 16 color	     |
	|_____________|__________________|___________________________|

			   (Continued on next page)
		    TABLE 3.  Supported	Graphics Adapters
				 (Continued)

























				    - 8	 -





	   ________________________________________________________
	   |		 |		   |			   |
	   |Vendor	 |Model		   |Mode		   |
	   |_____________|_________________|_______________________|
	   |Compaq	 |Advanced VGA	   |630x350 16 color	   |
	   |		 |		   |640x480 16 color	   |
	   |		 |		   |640x480 256	color	   |
	   |		 |		   |800x600 16 color	   |
	   |_____________|_________________|_______________________|
	   |Compaq	 |Plasma *	   |630x400 2 color	   |
	   |_____________|_________________|_______________________|
	   |Compaq	 |VGA-LCD	   |640x480 16 color	   |
	   |Compaq	 |VGC		   |640x350 16 color	   |
	   |		 |		   |640x480 16 color	   |
	   |_____________|_________________|_______________________|
	   |Cornerstone	 |MCA Dual Page	*  |1600x1280 monochrome   |
	   |_____________|_________________|_______________________|
	   |Cornerstone	 |Dual Page	   |1600x1280 monochrome   |
	   |_____________|_________________|_______________________|
	   |Cornerstone	 |PC 1280	   |1280x960 monochrome	   |
	   |_____________|_________________|_______________________|
	   |Cornerstone	 |Single Page	   |768x1008 monochrome	   |
	   |_____________|_________________|_______________________|
	   |Eisa Video	 |EVC-1		   |640x480 16 color	   |
	   |		 |		   |1024x768 16	color	   |
	   |		 |		   |1024x768 256 color	   |
	   |_____________|_________________|_______________________|

			   (Continued on next page)
		    TABLE 4.  Supported	Graphics Adapters

				 (Continued)




























				    - 9	 -


    X11R4 Server EFS Release and Installation Notes


    _______________________________________________________________________
    |		  |			 |				   |
    |Vendor	  |Model		 |Mode				   |
    |_____________|______________________|_________________________________|
    |Eizo	  |MD-B07 *		 |640x350 16 color		   |
    |		  |			 |640x480 16 color		   |
    |		  |			 |800x600 16 color		   |
    |_____________|______________________|_________________________________|
    |Eizo	  |Extra/EM (MD-B10) *	 |640x350 16 color		   |
    |		  |			 |640x480 16 color		   |
    |		  |			 |800x600 16 color		   |
    |		  |			 |1024x768 16 color interlaced	   |
    |		  |			 |1024x768 16 color non-interlaced |
    |_____________|______________________|_________________________________|
    |Genoa	  |6000	Series		 |640x480 16 color @ 60	Hz	   |
    |		  |			 |640x480 16 color @ 70	Hz	   |
    |		  |			 |640x480 256 color @ 60 Hz	   |
    |		  |			 |640x480 256 color @ 70 Hz	   |
    |		  |			 |800x600 16 color @ 60	Hz	   |
    |		  |			 |800x600 16 color @ 70	Hz	   |
    |		  |			 |800x600 256 color @ 60 Hz	   |
    |		  |			 |800x600 256 color @ 70 Hz	   |
    |		  |			 |1024x768 16 color @ 60 Hz	   |
    |_____________|______________________|_________________________________|
    |Genoa	  |SuperVGA 5000 Series	 |640x350 16 color		   |
    |		  |			 |640x480 16 color		   |
    |		  |			 |800x600 16 color		   |
    |		  |			 |1024x768 16 color		   |
    |		  |			 |1024x768 16 color interlaced	   |
    |_____________|______________________|_________________________________|
    |Grid	  |1530			 |640x400 Plasma		   |
    |		  |			 |640x400 LCD			   |
    |_____________|______________________|_________________________________|

			   (Continued on next page)
		    TABLE 5.  Supported	Graphics Adapters

				 (Continued)






















				   - 10	 -





    __________________________________________________________________________________
    |		       |		  |					      |
    |Vendor	       | Model		  | Mode				      |
    |__________________|__________________|___________________________________________|
    |		       |		  |					      |
    |Hercules	       | Monochrome	  | 720x350 monochrome			      |
    |__________________|__________________|___________________________________________|
    |IBM	       | VGA		  | 320x200 256	color			      |
    |		       |		  | 640x350 16 color			      |
    |		       |		  | 640x480 2 color			      |
    |		       |		  | 640x480 16 color			      |
    |__________________|__________________|___________________________________________|
    |IBM	       | 8514/A	512k	  | 640x480 16 color			      |
    |		       |		  | 1024x768 16	color			      |
    |__________________|__________________|___________________________________________|
    |IBM	       | 8514/a	1M	  | 640x480 256	color			      |
    |		       |		  | 1024x768 256 color interlaced	      |
    |__________________|__________________|___________________________________________|
    |IBM	       | XGA		  | 640x480 2 color			      |
    |		       |		  | 640x480 16 color			      |
    |		       |		  | 640x480 256	color			      |
    |		       |		  | 1024x768 2 color interlaced		      |
    |		       |		  | 1024x768 16	color interlaced	      |
    |		       |		  | 1042x768 256 color interlaced	      |
    |__________________|__________________|___________________________________________|
    |Matrox	       | M-WIN-1280	  | 1024x768 256 color 60 Hz non-interlaced   |
    |		       |		  | 1024x768 256 color 70 Hz non-interlaced   |
    |		       |		  | 1280x1024 256 color	60 Hz non-interlaced  |
    |__________________|__________________|___________________________________________|
    |Miro datensysteme | miroMagic HR/ISA | 640x480 256	color			      |
    |		       |		  | 1024x768 256 color 60 Hz		      |
    |		       |		  | 1280x1024 256 color			      |
    |__________________|__________________|___________________________________________|
    |Miro datensysteme | miroMagic MR/ISA | 640x480 256	color			      |
    |		       |		  | 1024x768 256 color 60 Hz		      |
    |__________________|__________________|___________________________________________|

			   (Continued on next page)
		    TABLE 6.  Supported	Graphics Adapters

				 (Continued)



















				   - 11	 -


    X11R4 Server EFS Release and Installation Notes


    _______________________________________________________________________________
    |		       |			    |				   |
    |Vendor	       | Model			    | Mode			   |
    |__________________|____________________________|______________________________|
    |		       |			    |				   |
    |Orchid Technology | Designer *		    | 640x350 16 color		   |
    |		       |			    | 640x480 16 color		   |
    |		       |			    | 800x600 16 color		   |
    |		       |			    | 1024x768 16 color		   |
    |		       |			    | 1024x768 16 color	Interlaced |
    |__________________|____________________________|______________________________|
    |Orchid Technology | ProDesigner II	version	3.x | 640x350 16 color		   |
    |		       |			    | 640x480 16 color 60 Hz	   |
    |		       |			    | 640x480 16 color 70 Hz	   |
    |		       |			    | 640x480 256 color	60 Hz	   |
    |		       |			    | 640x480 256 color	70 Hz	   |
    |		       |			    | 800x600 16 color 56 Hz	   |
    |		       |			    | 800x600 16 color 60 Hz	   |
    |		       |			    | 800x600 16 color 70 Hz	   |
    |		       |			    | 800x600 256 color	56 Hz	   |
    |		       |			    | 800x600 256 color	60 Hz	   |
    |		       |			    | 800x600 256 color	70 Hz	   |
    |		       |			    | 1024x768 256 color 45 Hz	   |
    |		       |			    | 1024x768 256 color 60 Hz	   |
    |__________________|____________________________|______________________________|

			   (Continued on next page)
		    TABLE 7.  Supported	Graphics Adapters

				 (Continued)






























				   - 12	 -





    _______________________________________________________________________________________
    |		       |			    |					   |
    |Vendor	       | Model			    | Mode				   |
    |__________________|____________________________|______________________________________|
    |		       |			    |					   |
    |Orchid Technology | ProDesigner II	version	4.x | 640x350 16 color			   |
    |		       |			    | 640x480 16 color 60 Hz		   |
    |		       |			    | 640x480 16 color 70 Hz		   |
    |		       |			    | 640x480 256 color	60 Hz		   |
    |		       |			    | 640x480 256 color	70 Hz		   |
    |		       |			    | 800x600 16 color 56 Hz		   |
    |		       |			    | 800x600 16 color 60 Hz		   |
    |		       |			    | 800x600 16 color 70 Hz		   |
    |		       |			    | 800x600 256 color	56 Hz		   |
    |		       |			    | 800x600 256 color	60 Hz		   |
    |		       |			    | 800x600 256 color	70 Hz		   |
    |		       |			    | 1024x768 256 color interlaced 45 Hz  |
    |		       |			    | 1024x768 256 color non-inter 60 Hz   |
    |__________________|____________________________|______________________________________|
    |Orchid Technology | ProDesigner II	version	5.x | 640x350 16 color @ 60Hz		   |
    |		       |			    | 640x480 16 color @ 60Hz		   |
    |		       |			    | 640x480 16 color @ 72Hz		   |
    |		       |			    | 640x480 256 color	@ 60Hz		   |
    |		       |			    | 640x480 256 color	@ 72Hz		   |
    |		       |			    | 800x600 16 color @ 56Hz		   |
    |		       |			    | 800x600 16 color @ 60Hz		   |
    |		       |			    | 800x600 16 color @ 72Hz		   |
    |		       |			    | 800x600 256 color	@ 56Hz		   |
    |		       |			    | 800x600 256 color	@ 60Hz		   |
    |		       |			    | 800x600 256 color	@ 72Hz		   |
    |		       |			    | 1024x768 256 color interlaced @ 45Hz |
    |		       |			    | 1024x768 256 color non-inter @ 60Hz  |
    |__________________|____________________________|______________________________________|

			   (Continued on next page)
		    TABLE 8.  Supported	Graphics Adapters

				 (Continued)






















				   - 13	 -


    X11R4 Server EFS Release and Installation Notes


    ___________________________________________________________________________
    |		       |		 |				       |
    |Vendor	       | Model		 | Mode				       |
    |__________________|_________________|_____________________________________|
    |		       |		 |				       |
    |Orchid Technology | ProDesigner/e	 | 640x350 16 color		       |
    |		       |		 | 640x480 16 color 60 Hz	       |
    |		       |		 | 640x480 16 color 70 Hz	       |
    |		       |		 | 640x480 256 color 60	Hz	       |
    |		       |		 | 640x480 256 color 70	Hz	       |
    |		       |		 | 800x600 16 color 56 Hz	       |
    |		       |		 | 800x600 16 color 60 Hz	       |
    |		       |		 | 800x600 16 color 70 Hz	       |
    |		       |		 | 800x600 256 color 56	Hz	       |
    |		       |		 | 800x600 256 color 60	Hz	       |
    |__________________|_________________|_____________________________________|
    |Orchid Technology | ProDesigner IIs | 640x350 16 color 60 Hz	       |
    |		       |		 | 640x480 16 color 60 Hz	       |
    |		       |		 | 640x480 16 color 72 Hz	       |
    |		       |		 | 640x480 256 color 60	Hz	       |
    |		       |		 | 640x480 256 color 72	Hz	       |
    |		       |		 | 800x600 16 color 56 Hz	       |
    |		       |		 | 800x600 16 color 60 Hz	       |
    |		       |		 | 800x600 16 color 72 Hz	       |
    |		       |		 | 800x600 256 color 56	Hz	       |
    |		       |		 | 800x600 256 color 60	Hz	       |
    |		       |		 | 800x600 256 color 72	Hz	       |
    |		       |		 | 1024x768 256	color interlaced 45 Hz |
    |		       |		 | 1024x768 256	color non-inter	60 Hz  |
    |		       |		 | 1024x768 256	color non-inter	70 Hz  |
    |__________________|_________________|_____________________________________|

			   (Continued on next page)
		    TABLE 9.  Supported	Graphics Adapters

				 (Continued)
























				   - 14	 -





     ___________________________________________________________________
     |		    |		    |					|
     |Vendor	    | Model	    | Mode				|
     |______________|_______________|___________________________________|
     |		    |		    |					|
     |Paradise	    | VGA 1024	    | 640x350 16 color			|
     |		    |		    | 640x480 16 color			|
     |		    |		    | 640x480 256 color			|
     |		    |		    | 800x600 16 color			|
     |		    |		    | 1024x768 16 color			|
     |______________|_______________|___________________________________|
     |Paradise	    | VGA Plus	    | 640x350 16 color			|
     |		    |		    | 640x400 256 color			|
     |		    |		    | 640x480 16 color			|
     |		    |		    | 800x600 16 color			|
     |______________|_______________|___________________________________|
     |Paradise	    | 8514/a	    | 1024x768 256 color non-interlaced	|
     |______________|_______________|___________________________________|
     |Quadram	    | Quad VGA *    | 640x350 16 color			|
     |		    |		    | 640x480 16 color			|
     |		    |		    | 800x600 16 color			|
     |		    |		    | 1024x768 16 color			|
     |______________|_______________|___________________________________|
     |Sigma Designs | Legend	    | 640x480 16 color			|
     |		    |		    | 640x480 256 color			|
     |		    |		    | 800x600 16 color			|
     |		    |		    | 800x600 256 color			|
     |		    |		    | 1024x768 16 color	non-interlaced	|
     |		    |		    | 1024x768 256 color non-interlaced	|
     |		    |		    | 1024x768 256 color interlaced	|
     |______________|_______________|___________________________________|
     |STB Systems   | EM-16 *	    | 640x480 16 color			|
     |		    |		    | 640x480 256 color			|
     |		    |		    | 800x600 16 color			|
     |		    |		    | 800x600 256 color			|
     |______________|_______________|___________________________________|

			   (Continued on next page)
		    TABLE 10.  Supported Graphics Adapters

				 (Continued)



















				   - 15	 -


    X11R4 Server EFS Release and Installation Notes


    ___________________________________________________________________________
    |		  |			     |				       |
    |Vendor	  |Model		     |Mode			       |
    |_____________|__________________________|_________________________________|
    |		  |			     |				       |
    |STB Systems  |Powergraph Ergo (EM-16+)  |640x480 16 color		       |
    |		  |			     |640x480 256 color		       |
    |		  |			     |800x600 16 color		       |
    |		  |			     |800x600 256 color		       |
    |		  |			     |1024x768 16 color		       |
    |		  |			     |1024x768 256 color	       |
    |_____________|__________________________|_________________________________|
    |STB Systems  |Extra-EM *		     |640x350 16 color		       |
    |		  |			     |640x480 16 color		       |
    |		  |			     |800x600 16 color		       |
    |		  |			     |1024x768 16 color	non-interlaced |
    |		  |			     |1024x768 16 color	interlaced     |
    |_____________|__________________________|_________________________________|
    |Tecmar	  |VGA/AD *		     |640x350 16 color		       |
    |		  |			     |640x480 16 color		       |
    |		  |			     |800x600 16 color		       |
    |		  |			     |1024x768 16 color	non-interlaced |
    |		  |			     |1024x768 16 color	interlaced     |
    |_____________|__________________________|_________________________________|
    |Toshiba	  |Grid	758 *		     |640x400 monochrome	       |
    |_____________|__________________________|_________________________________|
    |Toshiba	  |Grid	Plasma *	     |640x400 monochrome	       |
    |_____________|__________________________|_________________________________|

			   (Continued on next page)
		    TABLE 11.  Supported Graphics Adapters

				 (Continued)



























				   - 16	 -





       _______________________________________________________________
       |	     |		     |				      |
       |Vendor	     |Model	     |Mode			      |
       |_____________|_______________|________________________________|
       |	     |		     |				      |
       |Trident	     |Impact II	     |640x480 16 color		      |
       |	     |		     |640x480 256 color		      |
       |	     |		     |800x600 2	color		      |
       |	     |		     |800x600 16 color 56Hz	      |
       |	     |		     |800x600 16 color 72Hz	      |
       |	     |		     |800x600 256 color	56Hz	      |
       |	     |		     |800x600 256 color	72Hz	      |
       |	     |		     |1024x768 2 color non-interlaced |
       |	     |		     |1024x768 16 color		      |
       |	     |		     |1024x768 256 color	      |
       |_____________|_______________|________________________________|
       |Trident	     |Impact III     |640x480 16 color		      |
       |	     |		     |640x480 256 color		      |
       |	     |		     |800x600 2	color		      |
       |	     |		     |800x600 16 color 56Hz	      |
       |	     |		     |800x600 16 color 72Hz	      |
       |	     |		     |800x600 256 color	56Hz	      |
       |	     |		     |800x600 256 color	72Hz	      |
       |	     |		     |1024x768 2 color non-interlaced |
       |	     |		     |1024x768 16 color		      |
       |	     |		     |1024x768 256 color	      |
       |_____________|_______________|________________________________|

			   (Continued on next page)
		    TABLE 12.  Supported Graphics Adapters

				 (Continued)




























				   - 17	 -


    X11R4 Server EFS Release and Installation Notes


	_____________________________________________________________
	|	      |		      |				     |
	|Vendor	      |Model	      |Mode			     |
	|_____________|_______________|______________________________|
	|	      |		      |				     |
	|Trident      |TVGA 8900      |640x480 16 color		     |
	|	      |		      |640x480 256 color	     |
	|	      |		      |800x600 2 color		     |
	|	      |		      |800x600 16 color	56 Hz	     |
	|	      |		      |800x600 16 color	72 Hz	     |
	|	      |		      |800x600 256 color 50 Hz	     |
	|	      |		      |800x600 256 color 72 Hz	     |
	|	      |		      |1024x768	2 color		     |
	|	      |		      |1024x768	16 color non-inter   |
	|	      |		      |1024x768	16 color interlaced  |
	|	      |		      |1024x768	256 color non-inter  |
	|	      |		      |1024x768	256 color interlaced |
	|_____________|_______________|______________________________|
	|Verticom     |MX/AT	      |640x350 16 color		     |
	|	      |		      |640x480 16 color		     |
	|	      |		      |800x600 16 color		     |
	|_____________|_______________|______________________________|
	|Video Seven  |Fast Write *   |640x350 16 color		     |
	|	      |		      |640x480 16 color		     |
	|	      |		      |800x600 16 color		     |
	|_____________|_______________|______________________________|

			   (Continued on next page)
		    TABLE 13.  Supported Graphics Adapters

				 (Continued)





























				   - 18	 -





     ___________________________________________________________________
     |		      |			|				|
     |Vendor	      |	Model		| Mode				|
     |________________|_________________|_______________________________|
     |		      |			|				|
     |Video Seven     |	VGA 1024i *	| 640x350 16 color		|
     |		      |			| 640x480 16 color		|
     |		      |			| 800x600 16 color		|
     |		      |			| 1024x768 16 color 56 Hz	|
     |		      |			| 1024x768 16 color 44 Hz	|
     |		      |			| 1024x768 16 color 48 Hz	|
     |		      |			| 1024x768 16 color 65 Hz	|
     |________________|_________________|_______________________________|
     |Video Seven     |	VRAM *		| 640x350 16 color		|
     |		      |			| 640x480 16 color		|
     |		      |			| 800x600 16 color		|
     |________________|_________________|_______________________________|
     |Video Seven     |	VRAM II		| 640x350 16 color		|
     |		      |			| 640x480 16 color		|
     |		      |			| 640x480 256 color		|
     |		      |			| 640x480 256 color interlaced	|
     |		      |			| 752x410 16 color		|
     |		      |			| 720x540 16 color		|
     |		      |			| 800x600 16 color		|
     |		      |			| 800x600 256 color		|
     |		      |			| 1024x768 16 color		|
     |		      |			| 1024x768 16 color interlaced	|
     |		      |			| 1024x768 256 color		|
     |		      |			| 1024x768 256 color interlaced	|
     |________________|_________________|_______________________________|
     |Western Digital |	WD90C11	chipset	| 640x350 16 color		|
     |		      |			| 640x480 16 color		|
     |		      |			| 640x480 256 color		|
     |		      |			| 800x600 16 color		|
     |		      |			| 1024x768 16 color		|
     |________________|_________________|_______________________________|

    0.4.1  Supported Monitors

    The	X11R4 EFS supports the following monitor models:

       o Acer AcerView 11


       o Acer AcerView 31


       o Acer AcerView 31LR


       o Acer AcerView 33


       o Acer AcerView 33LR

       o Acer AcerView 35




				   - 19	 -


    X11R4 Server EFS Release and Installation Notes

       o Acer AcerView 37


       o Acer AcerView 7015


       o AST Super VGA


       o AST VGA


       o Bull Hitachi HM-4319-D


       o Cornerstone 19	inch


       o Compaq	Advanced Graphics Color	Monitor	14 inch


       o Compaq	Advanced Graphics Color	Monitor	16 inch


       o DEC VRC-16


       o HP D1194A


       o HP D1195A


       o IBM 8514


       o IBM 8515


       o JVC GD-H6116VFW


       o NEC 3D


       o NEC 4D


       o NEC 5D


       o Olivetti 14 inch/356 mm


       o Sony 1304 (Multi Scan HG)

    In addition, the server supports other monitors that are functionally
    identical to one of	the models currently listed above.  If you are not
    sure which monitor model most closely resembles your own, you can


				   - 20	 -




    configure the Xsco server for one of the following generic monitor
    models:

       o Standard VGA

       o Other 14 inch

       o Other 17 inch

       o Other 19 inch

    0.5	 Known Limitations

    The	following are known limitations	of the Xsco server.  Where appli-
    cable, methods are given to	work around them.

    0.5.1  34010-based Graphics	Adapter	Support

    This EFS does not provide a	server driver for 34010-based graphics
    adapters.  In the future, however, server drivers for 34010-based
    graphics adapters will become available in another supplement.  If you
    need to use	a 34010-based adapter, use the X11R3 Xsight server
    included in	 Release 1.1, Update G;	do not install this EFS.

    0.5.2  Server Virtual Screen Option

    The	-s server option, also known as	the Virtual Screen option, is not
    implemented	on the Xsco server.  This server option	allowed	you to
    specify and	display	a screen size that is larger than the screen size
    supported by your monitor.

    0.5.3  xinit Doesn't Start any Clients

    If .xserverrc exists in your home directory, the server starts, but	no
    clients are	started.

    0.5.4  Erratic Lock	Keys Behavior

    If you switch from the server to the console, and then change the
    status of a	Lock key, such as CapsLock or NumLock, the Lock	keys do
    not	behave properly.

    0.5.5  Lost	Error Messages

    Unless you redirect	standard error,	some error messages can	be lost
    when the Xsco server enters	graphics mode.

    0.5.6  Pointer Does	Not Disappear from Merge

    When you focus in a	DOS Merge window with VGA graphics adapters, the
    pointer does not disappear completely.










				   - 21	 -




    This chapter describes how to write	monitor	information (moninfo)
    files for monitors supported by the	Xsco server included in	the X11R4
    Server EFS.	 The Xsco server uses moninfo files to determine charac-
    teristics of monitors for which it is configured.  For details on
    video configuration, see ``Video Configuration'' in	Chapter	2, ``Con-
    figuring the Server.''

    To qualify as a moninfo file, the file must:

       o contain ASCII text in the moninfo file	format described in this
	 chapter


       o be named with an .mon extension


       o reside	in a subdirectory under	/usr/lib/grafinfo/moninfo


    0.1	 Moninfo Conventions

    Moninfo file-naming	conventions require that the filename end with a
    .mon extension.  Moninfo files do not reside directly in
    /usr/lib/grafinfo/moninfo, but in subdirectories named after the moni-
    tor	vendor.	 For example, /usr/lib/grafinfo/moninfo/nec/5d.mon con-
    tains information about the	NEC 5D monitor.

    mkdev graphics generates a configuration file,
    /usr/lib/grafinfo/grafmon, that describes the graphics adapter and
    monitor combinations you specified.	 grafmon includes one entry for
    each adapter/monitor combination.  The syntax of each grafmon entry
    is:

	 adapter_vendor.adapter_model:monitor_vendor.monitor_model


    For	example, the following grafmon file entry specifies a Trident TVGA
    card running with a	Sony 1304HG monitor:

	 trident.tvga:sony.1304

    The	Xsco server reads grafmon to determine the pathnames of	the
    grafinfo and moninfo files that describe the installed graphics
    adapter and	monitor. Xsco also reads /usr/lib/grafinfo/grafdev to
    determine which graphics adapter mode information it needs to extract
    from the specified grafinfo	file.  For details on grafinfo files, see
    Chapter 5, ``Creating Grafinfo Files.''

    Do not move	the grafinfo and moninfo files after you run mkdev graph-
    ics.  If you do, the server	fails to find the files	it needs at run-
    time.  Similarly, if you do	not follow these moninfo file-naming and
    location conventions, mkdev	graphics cannot	recognize your files as
    valid moninfo files.



    0.2	 Monitor Information File Structure




				    - 1	 -


    X11R4 Server EFS Release and Installation Notes

    Each moninfo file contains a description of	a single monitor model.
    Moninfo files contain two types of data:

       o comments

	 Comments may appear anywhere in the file and must follow C
	 language conventions.	The starting symbol for	a comment is /*
	 and the symbol	for ending a comment is	*/.  Comments can span
	 several lines of text.

    *********************************************************************
    NOTE

    Do not nest	comments.
    *********************************************************************


       o parameter definitions

	 Parameters are	defined, one per line, with the	following syntax:

	 parameter_name	= value;

    0.3	 Moninfo Parameters

    When you configure the Xsco	server for a specific monitor, Xsco reads
    a moninfo file to obtain specific information about	the monitor.  The
    required information is supplied in	parameter definitions.	Table 4.1
    describes the parameters required by the graphics adapter drivers sup-
    plied with this version of Xsco.

    *********************************************************************
    NOTE

    Parameter names are	case-sensitive.
    *********************************************************************


			 TABLE 1.  Moninfo Parameters






















				    - 2	 -





		   _______________________________________
		   |Parameter	| Purpose		  |
		   |____________|_________________________|
		   |DESCRIPTION	| the text that	appears	  |
		   |		| in the mkdev graphics	  |
		   |		| monitor list		  |
		   |MON_VENDOR	| the monitor vendor	  |
		   |		| name.	This string must  |
		   |		| be identical to the	  |
		   |		| directory in which the  |
		   |		| moninfo file resides.	  |
		   |		| the monitor model. This |
		   |		| string must be identi-  |
		   |		| cal to the moninfo file |
		   |		| filename without the	  |
		   |		|			  |
		   |WIDTHODEL	| the width, in	millime-  |
		   |		| ters,	of the monitor	  |
		   |		| screen		  |
		   |HEIGHT	| the height, in millime- |
		   |		| ters,	of the monitor	  |
		   |		| screen		  |
		   |TYPE	| the monitor type. Legal |
		   |		| values are ``color''	  |
		   |		| and ``mono.''		  |
		   |____________|_________________________|

    Future drivers may require parameter definitions other than	those
    listed in Table 4.1.  Xsco graphics	adapter	drivers	ignore parameter
    definitions	that they do not specifically require.	This ensures that
    all	Xsco drivers can use the same set of moninfo files.

    0.4	 Sample	Moninfo	File

    The	following is a sample moninfo file,
    /usr/lib/grafinfo/moninfo/ibm/8514.mon:

	 /* IBM	8514-001 monitor */

	 DESCRIPTION = "IBM 8514";
	 MON_VENDOR  = "ibm";
	 MON_MODEL   = "8514";

	 WIDTH				       = 300;
	 HEIGHT				       = 220;

	 TYPE				       = "color";













				    - 3	 -




    0.1	 Introduction

    This chapter describes how to create graphics information (grafinfo)
    files for graphics adapters	supported by the Xsco server included in
    the	X11R4 Server EFS.  Grafinfo files are typically	written	either by
    a graphics adapter developer or an X server	developer.  Although sys-
    tem	administrators should be aware of grafinfo file	management, as
    described in Administering ODT-VIEW, it is usually not necessary for a
    system administrator to edit a grafinfo file.

    Grafinfo files serve two purposes:

       o to configure the operating system for different classes of graph-
	 ics adapters

       o to supply graphics adapter parameter values to	the Xsco server	at
	 runtime

    Configuring	the operating system for a graphics adapter requires a
    grafinfo file in the appropriate subdirectory; the system administra-
    tor	then runs mkdev	graphics, as described in ``Video Configuration''
    in Chapter 2, ``Configuring	the Server.''

    To qualify as a grafinfo file, the file must:

       o be named with an .xgi extension

       o reside	in a subdirectory under	/usr/lib/grafinfo

       o contain ASCII text in the grafinfo file format	described in this
	 chapter

    These three	attributes of grafinfo files are described in the follow-
    ing	sections.


























				    - 1	 -


    X11R4 Server EFS Release and Installation Notes


    0.2	 Grafinfo Conventions

    Grafinfo filenames end with	an .xgi	extension.  Grafinfo files do not
    reside directly in /usr/lib/grafinfo, but in subdirectories	named
    after the adapter vendor.  The vendor subdirectories contain grafinfo
    files for graphics adapters	supported by the Xsco server.  For exam-
    ple, if you	install	a Trident TVGA graphics	adapter, the corresponding
    grafinfo file is /usr/lib/grafinfo/trident/tvga.xgi.  Because graphics
    adapters can run in	several	different resolutions (modes), each
    grafinfo file can include separate descriptions for	all modes possible
    for	a particular graphics adapter.

    The	grafdev	file generated by mkdev	graphics contains a list of the
    graphics adapters currently	installed in the system, and the terminals
    to which they are assigned.	For example, if	you run	mkdev graphics and
    assign a Trident TVGA adapter in 640x480, 16 color mode to tty09, the
    following line appears in /usr/lib/grafinfo/grafdev:

	 /dev/tty09:trident.tvga.svga.640x480-16

    mkdev graphics also	creates	/usr/lib/grafinfo/grafinfo.def which
    specifies a	single graphics	adapter	mode.  When you	run Xsco in single
    user mode, the server reads	grafinfo.def instead of	grafdev.

    The	Xsco server reads grafdev to determine which grafinfo file to read
    at runtime.	 Do not	move grafinfo files after you run mkdev	graphics;
    if you do, the server fails	to find	the files it needs at runtime.
    Similarly, if you do not follow these grafinfo file-naming and loca-
    tion conventions, mkdev graphics does not recognize	your files as
    valid grafinfo files.






























				    - 2	 -





    0.3	 Differences Between Xsight and	Xsco Grafinfo Files

    The	differences between the	Xsight and Xsco	servers	are reflected in
    differences	between	their grafinfo file formats.

    0.3.1  InitGraphics	Procedure Replaced by DATA Specification

    In Xsight grafinfo files, parameters were defined in a InitGraphics
    procedure statement. In Xsco grafinfo files, InitGraphics procedure
    statements are replaced by DATA statements.	 (See the sample grafinfo
    file at the	end of this chapter.)

    0.3.2  Custom Parameter Definitions

    The	parameter definitions required by the Xsco server depend on the
    installed graphics adapter and the Xsco driver that	supports it.  The
    Xsco server's runtime link kit allows new graphics adapter drivers to
    be added to	the server to support new graphics adapters.  New drivers
    may	require	new grafinfo files, and	may also require different parame-
    ters to be defined at runtime.  To accommodate future grafinfo files,
    the	Xsco server only uses parameter	definitions if they are	required
    by the graphics adapter driver selected while running mkdev	graphics;
    all	other parameter	definitions are	ignored.  For a	list of	parameters
    used by the	graphics adapters that the Xsco	server currently supports,
    see	``Grafinfo Parameters,'' later in this chapter.

    0.3.3  Bankswitch MAPTYPE Parameter

    The	Xsco server includes bankswitching drivers that	allow the server
    to access a	VGA graphics adapter's entire video memory.  As	a result,
    the	Xsco server can	render higher resolution graphics and more colors
    with a given graphics adapter than is possible with	the Xsight server.

    You	can tell the Xsco which	bankswitching driver to	use for	a specific
    graphics adapter mode by including the new MAPTYPE parameter in DATA
    statements in the appropriate grafinfo file.  For details, see
    ``Grafinfo Parameters,'' later in this chapter.























				    - 3	 -


    X11R4 Server EFS Release and Installation Notes


    0.3.4  PIXRESX and PIXRESY Parameters

    The	PIXRESX	and PIXRESY parameters are no longer required by the Xsco
    graphics adapter drivers. The information these two	parameters sup-
    plied is now derived from the WIDTH	and HEIGHT parameters in moninfo
    files. For details,	see Chapter 4, ``Creating Moninfo Files.''

    0.4	 Writing a grafinfo File

    Writing a grafinfo file requires:

       o using a detailed technical reference guide for	the graphics
	 adapter card

       o knowing the following aspects of the graphics adapter:

	    - vendor name

	    - model name

	    - class name

	    - number of	pixels horizontally

	    - number of	pixels vertically

	    - number of	colors

	    - base memory address and length

	    - I/O ports	for general/external registers,	attribute,
	      sequencer, color registers, graphics, and	CRTC

	    - number of	adjacent color bits per	pixel

	    - number of	color planes

	    - base physical memory address for the graphics adapter screen

	    - raster interleave	factor

	    - raster interleave	size

	 Writing a grafinfo file consists of these steps:

	  1.  Create a directory in /usr/lib/grafinfo named after your
	      graphics adapter vendor name.

	  2.  Copy an existing grafinfo	file to	your new directory.

	  3.  Edit the grafinfo	file using the information from	the graph-
	      ics adapter documentation	and the	information in the
	      ``Graphics Information File Structure'' section of this
	      chapter.

	  4.  Run mkdev	graphics so that the grafinfo file is recognized
	      by the server.  For more information, refer to ``Video Con-
	      figuration,'' in Chapter 2, ``Configuring	the Server.''


				    - 4	 -





	 0.4.1	Upgrading an Existing grafinfo File

	 Upgrading a grafinfo file generally means adding new resolution
	 information or	adding commands	to read	from and write to the I/O
	 ports.	 The final sections of this chapter discuss details of the
	 grafinfo file format.

	 The SetGraphics and SetText procedures	discussed later	in this
	 chapter contain commands to read and write directly to	the I/O
	 ports associated with your graphics adapter. Refer to the infor-
	 mation	about the CLASS	command	for a list of port addresses for
	 each graphics adapter class type (VGA,	CGA, EGA, and so on).

	 For example, to modify	an VGA graphics	adapter	grafinfo file for
	 a new resolution (assuming that the adapter has the capability	to
	 switch	between	resolution settings):

	  1.  Determine	whether	a new class needs to be	defined	by compar-
	      ing the new mode's video memory base address and address
	      window to	other mode descriptions	in the grafinfo	file.  If
	      the new video memory requirements	match, you can copy the
	      existing CLASS statement into the	new description.  Other-
	      wise, you	must define a new class	by writing a new CLASS
	      statement.

	  2.  Determine	the required I/O ports for the new mode.  You may
	      obtain this information from the hardware	documentation sup-
	      plied with the adapter. If the new mode employs the same I/O
	      ports as a mode already described	in the grafinfo	file, you
	      can copy the existing PORT statements into the new descrip-
	      tion.  PORT statements are included in grafinfo files pri-
	      marily for reference purposes; the server	does not require
	      them.  Be	sure to	use the	correct	I/O ports in your PRO-
	      CEDURE definitions.

	  3.  Add a new	MODE statement that defines a new mode name.

	  4.  Create PROCEDURE statements for the new adapter mode in the
	      grafinfo file.

	  5.  Add or change the	sequence of out	commands in the	SetGraph-
	      ics procedure to change the resolution of	the adapter.  Note
	      that the server does not require a SetText procedure.

	  6.  Run mkdev	graphics so that the adapter can be recognized by
	      the server.

	 0.5  Graphics Information File	Structure

	 Grafinfo files	can contain more than one mode description for a
	 particular board. Each	mode description consists of the following
	 four sections:

	    o header

	      The grafinfo header defines the vendor, model, class, and
	      resolution mode. It also defines the text	that appears while
	      running mkdev graphics.  At server startup, the X	server


				    - 5	 -


    X11R4 Server EFS Release and Installation Notes

	      reads mode descriptions whose header information matches the
	      mode descriptions	in /usr/lib/grafinfo/grafdev.

	    o memory and I/O port definition

	      The memory definition defines the	base address and size of
	      the address window through which the X server accesses the
	      graphics adapter's video memory. The I/O port definitions
	      provide the  I/O port addresses through which the	server
	      passes commands to the graphics adapter. Unlike the memory
	      definition, the I/O port definitions are not used	by the X
	      server; they are primarily included for reference.

	    o parameter	definitions

	      The DATA section of each grafinfo	mode description can
	      define parameters	unique to that particular graphics adapter
	      mode. As new graphics adapters are supported by new Xsco
	      drivers, new parameters can be added to the DATA section.

	    o procedure	definitions

	      The procedure definitions	consist	of sequences of	read and
	      write operations to the I/O ports.  In the majority of the
	      grafinfo files supplied with this	EFS, two procedures are
	      defined:	SetGraphics and	SetText.

    *********************************************************************
    NOTE

    To ensure compatibility in new grafinfo files, examine existing
    grafinfo files and follow the structure and	syntax carefully.
    *********************************************************************


	 0.5.1	Comments

	 Include comments in grafinfo files wherever they are needed.
	 Following C language conventions, comments begin with /* and end
	 with  */ symbols.  Comments may span several lines of text.

    *********************************************************************
    NOTE

    Comments should not	be nested.
    *********************************************************************



	 0.6  Grafinfo Header

	 Each mode that	is described in	a grafinfo file	starts with a
	 header	that includes the following parameter definitions:








				    - 6	 -





	 VENDOR	  graphics adapter vendor's name
	 MODEL	  graphics adapter model
	 CLASS	  display class	(such as VGA, EGA, and so on)
	 MODE	  display resolution
	 MEMORY	  base address and length
	 PORT	  I/O port addresses

	 The following is an example of	a header:

	 VENDOR	IBM	    "IBM"
	  MODEL	 VGA	     "VGA"
	   CLASS  VGA	      "VGA"
	    MODE   320x200-256 "320x200	256-color"    /* VGA 320x200 256 color */

	       MEMORY(0xA0000,0x10000);	       /*  Base	Address, Length	       */
	       PORT(0x3C2,0x3CA,0x3CC,0x3DA);  /*  General/External registers  */
	       PORT(0x3C0,0x3C1);	       /*  Attribute		       */
	       PORT(0x3C4,0x3C5);	       /*  Sequencer		       */
	       PORT(0x3C7,0x3C8,0x3C9);	       /*  Color registers	       */
	       PORT(0x3CE,0x3CF);	       /*  Graphics		       */
	       PORT(0x3D4,0x3D5);	       /*  CRTC			       */


	 The statements	following the header are executed only if the VEN-
	 DOR, MODEL, CLASS, and	MODE statements	match the device name
	 specified in /usr/lib/grafinfo/grafdev.  Note that the	names of
	 the grafinfo file and the directory in	which it resides must also
	 match the MODEL and VENDOR statements exactly,	or the X server
	 rejects the entire grafinfo file.

	 Details on grafinfo file header components follow.
























	 ____________________________________________________




				    - 7	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	VENDOR vendor-name   comment

	 Description:	matches	vendor-name against the	vendor
			field of a complete mode description
			listed in /usr/lib/grafinfo/grafdev. The
			statements following this command exe-
			cute only if vendor-name matches the
			vendor field of	the device name.

			The vendor entry consists of three
			fields:

			   o the reserved word,	VENDOR

			   o the name of the graphics adapter
			     vendor in uppercase or lowercase

			   o a quoted string of	up to 20 charac-
			     ters. The quoted string is	a com-
			     ment that is used by the mkdev
			     graphics installation script to
			     provide information about the
			     graphics adapter in prompt	choices.

	 Example:	For example, a vendor name for a card
			made by	Paradise might be:


			     VENDOR PARADISE	 "Paradise"


			The vendor name	is used	to locate the
			appropriate grafinfo file and matches
			the directory name.  In	this example,
			the file would be found	in the directory
			/usr/lib/grafinfo/paradise.

	 ____________________________________________________

















	 ____________________________________________________




				    - 8	 -





	 Syntax:	MODEL adapter-model    comment

	 Description:	matches	adapter-model name against the
			model field of a complete mode descrip-
			tion listed in
			/usr/lib/grafinfo/grafdev. adapter-model
			indicates one of the various models of a
			vendor's device.  The statements follow-
			ing this command execute only if
			adapter-model matches the adapter model
			field of the device name, and the vendor
			field of the device name matches the
			preceding VENDOR command.

			The model entry	consists of three
			fields:

			   o the reserved word,	MODEL

			   o the name of the graphics adapter
			     model in uppercase	or lowercase

			   o a quoted string of	up to 20 charac-
			     ters in length. The leading space
			     before the	command	is required.
			     The quoted	string is a comment that
			     is	used by	the mkdev graphics ins-
			     tallation script to provide infor-
			     mation about the graphics adapter
			     in	prompt choices.

			The mkdev graphics script only displays
			the first MODEL	command	in a graphics
			information file.  Consequently,
			separate files should be used for
			separate models	if the information in
			this comment is	needed to distinguish
			one menu selection from	another.  The
			first level menu displays the comments
			from the first VENDOR and MODEL	commands
			in each	file, while the	second level
			menus display the comments from	the
			CLASS and MODE commands	preceding each
			set of procedures in the file selected
			from the first level menu.

	 Example:
			A model	name for a VGA-Plus card can be
			specified as:

			MODEL VGAPLUS	  "VGA Plus"









				    - 9	 -


    X11R4 Server EFS Release and Installation Notes

			The model name is used to locate the
			grafinfo file and matches the filename.
			In this	example, the file would	be named
			vgaplus.xgi.

	 ____________________________________________________
	 ____________________________________________________






















































				   - 10	 -





	 Syntax:	CLASS class comment

	 Description:	matches	class against the class	field of
			a complete mode	description listed in
			/usr/lib/grafinfo/grafdev. The state-
			ments following	this command execute
			only if	class matches the class	field of
			the device name, and the vendor	and
			model fields of	the device name	match
			the preceding VENDOR and MODEL commands.

		   The class entry consists of three fields:

		      o	the reserved word, CLASS

		      o	the name of the	graphics adapter class in upper-
			case or	lowercase

		      o	a quoted string	of up to 20 characters in length.
			Note that two leading spaces are required before
			the command.  The quoted string	is a comment that
			is used	by the mkdev graphics installation script
			to provide information about the graphics adapter
			in prompt choices.

	 You can specify a new class name in the grafinfo file.	When new
	 classes are specified,	a new entry is created in the class.h file
	 (class.h is located in	the /etc/conf/pack.d/cn	directory for the
	 console driver).

	 For information on classes currently supported, refer to the
	 grafinfo files	supplied with the Xsco server.	If you have a
	 board that requires a memory base or amount of	memory not sup-
	 ported	by one of these	classes, add a new class to the	grafinfo
	 file.	When the mkdev graphics	utility	is executed, and a class
	 is detected that is not currently in class.h, class.h is updated
	 and the kernel	must be	relinked.
    ____________________________________________________

















    ____________________________________________________




				   - 11	 -


    X11R4 Server EFS Release and Installation Notes


    Syntax:	   MODE	name comment

    Description:   matches name	against	the mode field of a
		   complete mode description listed in
		   /usr/lib/grafinfo/grafdev. The state-
		   ments following this	command	execute
		   only	if the mode name matches the mode
		   field of the	device name, and the ven-
		   dor,	model, and class fields	of the dev-
		   ice name match the preceding	VENDOR,
		   MODEL, and CLASS commands. The MODE
		   entry consists of three fields:

		      o	the reserved word, MODE

		      o	the mode name, which can be used to
			indicate one of	the various resolu-
			tions, number of colors, and other
			display	characteristics	that a dev-
			ice can	support

		      o	a quoted string	of up to 40 charac-
			ters.  The quoted string is a com-
			ment that is used by the mkdev
			graphics installation script to
			provide	information about how to
			set up the graphics adapter in
			prompt choices.
		   Note	that three leading spaces are
		   required before the command.	By conven-
		   tion, the mode name uses the	following
		   format:

		   width x height [-colors] [-
		   refresh_rate] [-other_characteristics]

		   width and height are	the width and
		   height of the display, in pixels. To
		   avoid confusion, these values should
		   match the values in the PIXWIDTH and
		   PIXHEIGHT commands in the DATA section
		   and the way the graphics adapter is set
		   up in the SetGraphics procedure.
		   refresh_rate	is the vertical	refresh
		   rate, if more than one rate is sup-
		   ported.  colors is the number of colors,
		   if the display is not monochrome.
		   other_characteristics is any	other
		   feature that	distinguishes this mode
		   from	another	mode supported by the
		   display adapter, such as -I for an
		   interlaced display.



		   name	can also be the	keyword	``DUMMY.''
		   This	creates	a grafinfo mode	that users
		   cannot select while running mkdev graph-


				   - 12	 -




		   ics.	This is	helpful	when you need to
		   map in more than one	memory region.




    Example:	   MODE	  800x600-16  "800x600 16 color"

    ____________________________________________________
    ____________________________________________________



















































				   - 13	 -


    X11R4 Server EFS Release and Installation Notes


    Syntax:	   MEMORY(value[-value][,value]);

    Description:   declares physical memory locations that are
		   accessed by the procedure definition	that follows
		   this	command. The PORT and MEMORY commands define
		   the device class.  Memory locations must be on 4
		   kilobyte boundaries.	 Currently, each grafinfo mode
		   is limited to one memory definition.

    Example:	   MEMORY(0xA0000,0x10000); /* Base Address, Length */

    ____________________________________________________
















































				   - 14	 -





    Syntax:	   PORT(value[-value][,value]);

    Description:   declares the	I/O ports that are accessed by
		   the procedure definition that follows this
		   command.  A list of values or value ranges can
		   be specified.  The PORT and MEMORY commands
		   define the device class.

    Example:	   PORT(0x3C7,0x3C8,0x3C9); /* Color registers */

    0.7	 Grafinfo Parameters

    Grafinfo parameters	are defined, one per line, within DATA statements.
    Each parameter definition has the following	syntax:

	 parameter_name						      =	value;

    parameter_name can be any string, provided it does not conflict with
    other parameters or	keywords.  In the grafinfo files supplied in this
    EFS, value is an integer or	a quoted string.  There	are no other res-
    trictions on parameter definitions.	 If you	include	parameter defini-
    tions that are not required	by the graphics	adapter	driver,	the Xsco
    server ignores them.  Table	5.1 contains a list of parameters that are
    used by the	grafinfo files supplied	in this	EFS.

			TABLE 1.  Grafinfo Parameters


































				   - 15	 -


    X11R4 Server EFS Release and Installation Notes


	     ____________________________________________________
	     |Parameter	  | Purpose				 |
	     |____________|______________________________________|
	     |DEPTH	  | number of planes			 |
	     |DEVTYPE	  | hardware type			 |
	     |DEVTECH	  | video memory organization		 |
	     |PIXBYTES	  | bytes per raster line		 |
	     |PIXWIDTH	  | horizontal pixel count		 |
	     |PIXHEIGHT	  | vertical pixel count		 |
	     |PIXBITS	  | adjacent color bits	per pixel	 |
	     |PIXPLANES	  | color planes count			 |
	     |BASEADDRESS | base physical memory address	 |
	     |INTERLEAVE  | raster-interleave factor		 |
	     |INTERSIZE	  | raster-interleave size		 |
	     |MAPTYPE	  | select bank	manager			 |
	     |VISUAL	  | selects graphics adapter visual type |
	     |XDRIVER	  | selects graphics adapter driver	 |
	     |____________|______________________________________|

    The	following commands are not supported by	the X server but appear	in
    grafinfo files written for the Xsight server:

       o DEVATTR

       o MAPFLAGS

       o MAPWINSCANS

       o WINBANK

       o WINOFFSET

       o WINSCANS

       o WINTYPE

	 It is recommended that	grafinfo statements including these com-
	 mands be commented-out.

	 0.7.1	Parameter Descriptions

	 The grafinfo parameters are listed in alphabetical order in this
	 section and can be coded in either upper- or lowercase. Note that
	 command syntax	descriptions indicate if a terminating semicolon
	 is required.

	 ____________________________________________________













				   - 16	 -





	 Syntax:	BASEADDRESS = address;

	 Description:	sets the base physical memory address
			for the	graphics display screen

	 Example:	BASEADDRESS = 0xA0000;

	 ____________________________________________________




















































				   - 17	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	DEVTECH	= value;

	 Description:	indicates the video memory structure for a dev-
			ice, where value is any	of the following:
			0x0000 = Monochrome, flat, linear
			0x0001 = Monochrome, flat, interleaved
			0x0002 = Monochrome, bank-switched, linear
			0x0003 = Monochrome, bank-switched, interleaved
			0x0004 = Multibit, flat, linear
			0x0005 = Multibit, flat, interleaved
			0x0006 = Multibit, bank-switched, linear
			0x0007 = Multibit, bank-switched, interleaved
			0x0008 = Multiplane, flat, linear
			0x0009 = Multiplane, flat, interleaved
			0x000A = Multiplane, bank-switched, linear
			0x000B = Multiplane, bank-switched, interleaved
			0x000D = VGA, flat, linear
			0x000E = VGA, bank-switched, linear
			0x000F = VGA, segmented, linear
			0x0010 = TMS 34010, rowBytes, powers of	2
			0x0011 = TMS 34010, rowBytes, variable
			0x0014 = IBM 8514
			0x0018 = 8 bit 256 color linear
			0x0019 = 8 bit 256 color interlaced
			0x001A = 8 bit 256 color VGA

			If the XDRIVER parameter is ``mw,'' DEVTECH
			cannot be 0x0010, 0x0011, or 0x0014.

	 Example:	DEVTECH=0x0D;/*	VGA */

	 Note:		If you have grafinfo files from	prior versions
			of ODT-VIEW, ensure that DEVTECH has a correct
			value.	If the value is	not correct, the server
			does not initialize.

	 ____________________________________________________























				   - 18	 -





	 Syntax:	DEVTYPE	= value;

	 Description:	For LCD, plasma, and monochrome	moni-
			tors, use, DEVTYPE = 0.	 For IBM EGA/VGA
			displays, use DEVTYPE =	0x01.  For EVC
			adapters, use DEVTYPE =	0x02.


	 ____________________________________________________



















































				   - 19	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	INTERLEAVE = value;

	 Description:	sets the display adapter raster-
			interleave factor.  INTERLEAVE works in
			conjunction with INTERSIZE.  The default
			interleave is ``1.''

	 Example:	INTERLEAVE  = 1;

	 ____________________________________________________


















































				   - 20	 -




	 ____________________________________________________




























































				   - 21	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	INTERSIZE = value;

	 Description:	sets the display adapter raster-
			interleave size.  INTERSIZE is the
			number of bytes	from the start of one
			row to the start of the	next, in screen
			order. The default INTERSIZE is	the
			current	value of PIXBYTES.

	 ____________________________________________________


















































				   - 22	 -





	    Thus, if a device has a 12x9, 1-bit-
	    per-pixel display, video memory is
	    arranged as	follows:


		      Screen Order			      Memory Order
	      Row  Address  Pixels		     Address  Row   Pixels
	       1    A0000   * *	* * * *	* *|* *	* *   A0000    1    ******** ****....
	       2    A0008   * *	* * * *	* *|* *	* *   A0002    4    ******** ****....
	       3    A0010   * *	* * * *	* *|* *	* *   A0004    7    ******** ****....
	       4    A0002   * *	* * * *	* *|* *	* *   A0006   pad   ........ ........
	       5    A000A   * *	* * * *	* *|* *	* *   A0008    2    ******** ****....
	       6    A0012   * *	* * * *	* *|* *	* *   A000A    5    ******** ****....
	       7    A0004   * *	* * * *	* *|* *	* *   A000C    8    ******** ****....
	       8    A000C   * *	* * * *	* *|* *	* *   A000E   pad   ........ ........
	       9    A0014   * *	* * * *	* *|* *	* *   A0010    3    ******** ****....
						      A0012    6    ******** ****....
						      A0014    9    ******** ****....
						      A0016   pad   ........ ........

	      Set:
		      PIXBYTES	  = 2;
		      PIXWIDTH	  = 12;
		      PIXHEIGHT	  = 9;
		      PIXBITS	  = 1;
		      PIXPLANES	  = 1;
		      BASEADDRESS = 0XA0000;
		      INTERLEAVE  = 3;
		      INTERSIZE	  = 0x8;































				   - 23	 -


    X11R4 Server EFS Release and Installation Notes


	      On both diagrams:		     *	represents a displayable bit.
	      On the screen order diagram:   |	represents the byte boundary.
	      On the memory order diagram:   .	represents an "off screen" bit.

	      ____________________________________________________
	      ____________________________________________________






















































				   - 24	 -





	      Syntax:	     MAPTYPE = entry;

	      Description:   selects server bank-switching
			     mechanism.	 The following are
			     legal values for MAPTYPE:



		 o "Cornerstone"


		 o "Cornerstone	MC"


		 o "EGA"


		 o "ATIWonder+800x600x256"


		 o "ATIWonder+1024x768x16"


		 o "ATIWonder+1024x768x256"


		 o "ET4000M800x600x256"


		 o "ET4000M1024x768x16"


		 o "ET4000M1024x768x256"


		 o "TRIDENT8900B128K"


		 o "TRIDENT8900C64K"


		 o "TSENG3000_64K"


		 o "TSENG3000_128K"


		 o "TSENG4000_2_64K"


		 o "PARADISE_1_64K"


		 o "PARADISE_1_128K"


		 o "PARADISE_2_32K"



				   - 25	 -


    X11R4 Server EFS Release and Installation Notes


		 o "PARADISE_3_64K"


		 o "CHIPS451_64K"


		 o "CHIPS451_128K"


		 o "CHIPS452_64K"


		 o "CHIPS452_128K"


		 o "CHIPS453_32K"


		 o "CHIPS453_64K"


		 o "ATI1828_64K"


		 o "GENOA_64K"


		 o "GENOA_128K"


		 o "GENOA_2_128K"


		 o "VIDEO7V3_64K"


		 o "VIDEO7V4_64K"


		 o COMPAQ_2_64K"


		 o "NoopMngr"
	 ____________________________________________________
















				   - 26	 -





	 Syntax:	PIXBITS	= number;

	 Description:	sets the number	of adjacent color bits
			per pixel. Legal values	are 1 and 8.

	 Example:	PIXBITS	= 1;

	 ____________________________________________________




















































				   - 27	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	PIXBYTES = value;

	 Description:	sets the number	of bytes-per-raster-
			line.  PIXBYTES	should be calculated as
			(PIXWIDTH+7)/8.

	 Example:	PIXBYTES = 80;

	 ____________________________________________________
	 ____________________________________________________


















































				   - 28	 -





	 Syntax:	PIXHEIGHT = value;

	 Description:	sets the number	of pixels vertically.  This value
			and PIXWIDTH must match	the resolution set up in
			the SetGraphics	procedure and should match the
			values encoded in the MODE command.

	 Example:	MODE   640x480-16  "640x480 16-color"
			...
			PIXWIDTH    = 640;
			PIXHEIGHT   = 480;
			...
			out(0x3C2,0xE3);  /*Put	in 640x480 16 color mode*/

	 ____________________________________________________













































				   - 29	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	PIXPLANES = value;

	 Description:	sets the number	of color planes

	 Example:	PIXPLANES   = 4;

	 ____________________________________________________





















































				   - 30	 -





	 Syntax:	PIXWIDTH = value;

	 Description:	sets the number	of pixels horizontally.	 This
			value and PIXHEIGHT must match the resolution set
			up in the SetGraphics procedure	and should match
			the values encoded in the MODE command.

	 Example:	MODE   640x480-16  "640x480 16-color"
			...
			PIXWIDTH    = 640;
			PIXHEIGHT   = 480;
			...
			out(0x3C2,0xE3);  /*Put	in 640x480 16 color mode*/

	 ____________________________________________________
	 ____________________________________________________












































				   - 31	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	VISUAL = value;

	 Description:	specifies the visual type of the graph-
			ics adapter.  Legal values are ``Pseu-
			doColor'' and ``StaticGrey.''

	 Example:	  VISUAL      =	"PseudoColor";

	 ____________________________________________________



















































				   - 32	 -





	 Syntax:	XDRIVER	= value;

	 Description:	specifies the graphics adapter driver
			that is	loaded when the	Xsco server
			starts.	 The following graphics	adapter
			drivers	are included with this EFS:

			mw	  driver for VGA graphics
				  adapters

			dfb	  driver for ``dumb frame
				  buffer'' graphics adapters

			eff	  driver for 8514-based	graphics
				  adapters

			xga	  driver for IBM XGA graphics
				  adapter

	 ____________________________________________________








































				   - 33	 -


    X11R4 Server EFS Release and Installation Notes


	 0.8  Grafinfo Procedures

	 A PROCEDURE statement indicates the start of a	device procedure
	 definition. Device procedures define parameters or perform
	 hardware-specific functions, such as physically switching a
	 display adapter to graphics mode.  Device procedures are inter-
	 preted	at runtime and allow portions of the X server to be
	 defined independently from the	graphics adapter driver.  Grafinfo
	 files include device procedure	definitions according to the
	 requirements of the graphics adapter drivers they support.  The
	 graphics adapter drivers included in this EFS require only the
	 following two procedures:

	    o SetGraphics switches the device into graphics mode.

	    o SetText switches the device into text mode.

	 For examples, refer to	``Sample Grafinfo File,'' at the end of
	 this chapter.	A device procedure is defined by a series of com-
	 mands and variables that are enclosed by curly	braces ({}) fol-
	 lowing	the PROCEDURE entry. A command can appear anywhere on a
	 line in either	uppercase or lowercase.	 A command may require
	 variables, which appear after the command.  Commands and vari-
	 ables must be separated by semicolons.

	 Sixty-four variables, or registers, named r0 through r63, are
	 available in a	PROCEDURE for storing temporary	values.	 Each
	 variable can hold a 16-bit integer.  When used	with the bout com-
	 mand, values are always sent from R0 first.  Therefore, when
	 selecting variables for purposes other	than writing data to the
	 I/O ports, use	registers with numbers higher than the number of
	 data values that you plan to output.

	 Numeric values	can be specified in decimal or hexadecimal.  Hexa-
	 decimal values	follow C language conventions and must be preceded
	 by 0x (for example, 0x10, 0X10, 0xAFF2).

	 0.9  Grafinfo Commands

	 Table 5.2 contains a list of the commands that	are used in the
	 SetGraphics and SetText procedures.  Note that	all procedure and
	 command names are case-sensitive.













			 TABLE 2.  Grafinfo Commands




				   - 34	 -





		       _____________________________________
		       |Commands | Purpose		    |
		       |_________|__________________________|
		       |and	 | logical AND		    |
		       |bout	 | write a byte	string	    |
		       |in	 | read	a byte		    |
		       |not	 | logical NOT		    |
		       |or	 | logical OR		    |
		       |out	 | write a byte		    |
		       |outw	 | write a double-byte word |
		       |set	 | set a variable	    |
		       |shl	 | logical shift left	    |
		       |shr	 | logical shift right	    |
		       |wait	 | delay processing	    |
		       |xor	 | exclusive OR		    |
		       |_________|__________________________|



	 0.9.1	Command	Descriptions

	 The grafinfo commands are listed in alphabetical order	in this
	 section and can be coded in either upper- or lowercase. Note that
	 command syntax	descriptions indicate if a terminating semicolon
	 is required.

	 ____________________________________________________

































				   - 35	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	and(variable, value);

	 Description:	performs a bitwise AND on variable using the specified
			value

	 Example:	and(R0,	0x3f);	 /* clear bits 6&7 - hi	res and	blank */

	 ____________________________________________________

	 ____________________________________________________


















































				   - 36	 -





	 Syntax:	bout(count, indexport, dataport);

	 Description:	outputs	a block	of values to an	indexed	I/O port.  The
			first count variables starting from R0 are output by
			first sending an index to indexport and	then sending
			the variables to dataport.  The	bout command is	analo-
			gous to	the following C	code:
			for (index = 0;	index <	count; index++)
			{
			    out(indexport, index);
			    out(dataport, index);
			}
	 Example:	The bout command is used with one or more assignment
			commands such as shown in the following	example:
			r0 = 0x1; r1= 0x01; r2 = 0x0F;	/* Assign values */
			bout(3,	0x3C4, 0x3C5);	     /*	Output data to ports */

	 ____________________________________________________










































				   - 37	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	in(variable, port);

	 Description:	reads an I/O port, port, and stores its
			value in variable
	 Example:	in(r63,	0x1CF);

	 ____________________________________________________





















































				   - 38	 -





	 Syntax:	not(variable);

	 Description:	performs a bitwise NOT on variable

	 ____________________________________________________























































				   - 39	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	or(variable, value);

	 Description:	performs a bitwise OR on a variable
			using the specified value
	 Example:	/* set state on	extended registers */
			out(0x1CE, 0xB3); in(r63, 0x1CF);
			or(r63,	0x10);
			out(0x1CE, 0xB3); out(0x1CF, r63);

	 ____________________________________________________
	 ____________________________________________________

















































				   - 40	 -





	 Syntax:	out(port, value);
			outw(port, value);

	 Description:	outputs	a value	to an I/O port.	outw
			outputs	a double-byte word.

	 Example:	out(0x3C0,0);  /* disable palette */

	 ____________________________________________________



















































				   - 41	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	set(variable1, variable2);

	 Description:	sets variable1 equal to	variable2

	 ____________________________________________________























































				   - 42	 -





	 Syntax:	shl(variable, value);

	 Description:	performs a logical shift left of value
			bits on	variable

	 ____________________________________________________






















































				   - 43	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	shr(variable, value);

	 Description:	performs a logical shift right of value
			bits on	variable

	 ____________________________________________________






















































				   - 44	 -





	 Syntax:	variable = value;

	 Description:	assigns	value to variable
	 Example:	The following example assigns 3	to
			register zero, sends an	index to the
			indexport at 0x3C4 and then writes the
			contents of the	register to the	dataport
			at 0x3C5:
			r0 = 0x03; bout(1,0x3C4,0x3C5);	/* sequencer enable */

	 ____________________________________________________
	 _______________________________________________________
















































				   - 45	 -


    X11R4 Server EFS Release and Installation Notes


	 Syntax:	wait(delay);

	 Description:	introduces a delay of delay
			microseconds.  Use wait	if a short delay
			is required.

	 ____________________________________________________





















































				   - 46	 -





	 Syntax:	xor(variable, value);

	 Description:	performs a bitwise exclusive OR	on a
			variable using the specified value

	 ____________________________________________________






















































				   - 47	 -


    X11R4 Server EFS Release and Installation Notes


	 0.10  Sample Grafinfo File

/*
 * %Z% %M% %I% %E% %Q%
 *
 * Copyright (C) 1991 The Santa Cruz Operation, Inc.
 *
 * The information in this file is provided for the exclusive use of the
 * licensees of The Santa Cruz Operation, Inc.  Such users have the right 
 * to use, modify, and incorporate this code into other products for purposes 
 * authorized by the license agreement provided they include this notice 
 * and the associated copyright notice with any such product.  The 
 * information in this file is provided "AS IS" without warranty.
 * 
 */
/* *********************************************************************** *
 * IBM/VGA.XGI - XEGIA(tm) GrafInfo File for IBM PS2 VGA Adaptor           *
 *                                                                         *
 *        Copyright (c) 1989 Metagraphics Software Corporation             *
 *      269 Mount Hermon Road, PO 66779, Scotts Valley, CA 95066           *
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
 *                                                                         *
 *                      IBM.VGA.VGA.320x200-256                            *
 *                      IBM.VGA.VGA.640x350-16                             *
 *                      IBM.VGA.VGA.640x480-2                              *
 *                      IBM.VGA.VGA.640x480-16                             *
 *                                                                         *
 * *********************************************************************** */

VENDOR IBM         "IBM"
 MODEL  VGA         "VGA"
  CLASS  VGA         "VGA"
   MODE   320x200-256 "320x200 256-color"    /* VGA 320x200 256 color */

      MEMORY(0xA0000,0x10000);        /*  Base Address, Length        */
      PORT(0x3C2,0x3CA,0x3CC,0x3DA);  /*  General/External registers  */
      PORT(0x3C0,0x3C1);              /*  Attribute                   */
      PORT(0x3C4,0x3C5);              /*  Sequencer                   */
      PORT(0x3C7,0x3C8,0x3C9);        /*  Color registers             */
      PORT(0x3CE,0x3CF);              /*  Graphics                    */
      PORT(0x3D4,0x3D5);              /*  CRTC                        */

      DATA
         {
         XDRIVER     = "dfb";
         VISUAL      = "PseudoColor";
         DEPTH       = 8;
         PIXBYTES    = 320;
         PIXWIDTH    = 320;
         PIXHEIGHT   = 200;
         PIXBITS     = 8;
         }

      PROCEDURE  SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 0x0E;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0x63);                 /* misc out reg */
         r0=3; bout(1,0x3C4,0x3C5);       /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x41;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x40;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x40;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x06;  r7  = 0x07;
         r8  = 0x08;  r9  = 0x09;  r10 = 0x0A;  r11 = 0x0B;
         r12 = 0x0C;  r13 = 0x0D;  r14 = 0x0E;  r15 = 0x0F;

         r16 = 0x41;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


/* ********************************************************************* */

VENDOR IBM         "IBM"
 MODEL  VGA         "VGA"
  CLASS  VGA         "VGA"
   MODE   640x350-16  "640x350 16-color"      /* VGA 640x350 16 color */

      MEMORY(0xA0000,0x10000);        /*  Base Address, Length        */
      PORT(0x3C2,0x3CA,0x3CC,0x3DA);  /*  General/External registers  */
      PORT(0x3C0,0x3C1);              /*  Attribute                   */
      PORT(0x3C4,0x3C5);              /*  Sequencer                   */
      PORT(0x3C7,0x3C8,0x3C9);        /*  Color registers             */
      PORT(0x3CE,0x3CF);              /*  Graphics                    */
      PORT(0x3D4,0x3D5);              /*  CRTC                        */

      DATA
         {
         XDRIVER     = "mw";
         VISUAL      = "PseudoColor";
         DEPTH       = 4;
         DEVTYPE     = 01;
         DEVTECH     = 0x0D;            /* VGA */
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 350;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         BASEADDRESS = 0xA0000;
         INTERLEAVE  = 1;
         INTERSIZE   = 80;
         }

      PROCEDURE  SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(6,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0xA3);                 /* misc out reg */
         r0=3; bout(1,0x3C4,0x3C5);       /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x83;  r17 = 0x85;  r18 = 0x5D;  r19 = 0x28;
         r20 = 0x0F;  r21 = 0x63;  r22 = 0xBA;  r23 = 0xE3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;

         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


/* ********************************************************************* */

VENDOR IBM         "IBM"
 MODEL  VGA         "VGA"
  CLASS  VGA         "VGA"
   MODE   640x480-2   "640x480 2-color"         /* VGA 640x480 2 color */

      MEMORY(0xA0000,0x10000);        /* Base Address, Length        */
      PORT(0x3C2,0x3CA,0x3CC,0x3DA);  /* General/External registers  */
      PORT(0x3C0,0x3C1);              /* Attribute                   */
      PORT(0x3C4,0x3C5);              /* Sequencer                   */
      PORT(0x3CE,0x3CF);              /* Graphics                    */
      PORT(0x3D4,0x3D5);              /* CRTC                        */

      DATA
         {
         XDRIVER     = "dfb";
         VISUAL      = "StaticGray";
         DEPTH       = 1;
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 480;
         PIXBITS     = 1;
         }

      PROCEDURE SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0xE3);                 /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0x0B;  r7  = 0x3E;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0xEA;  r17 = 0x8C;  r18 = 0xDF;  r19 = 0x28;
         r20 = 0x00;  r21 = 0xE7;  r22 = 0x04;  r23 = 0xC3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x05;  r7  = 0x01;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x3F;  r2  = 0x3F;  r3  = 0x3F; /* palette */
         r4  = 0x3F;  r5  = 0x3F;  r6  = 0x3F;  r7  = 0x3F;
         r8  = 0x3F;  r9  = 0x3F;  r10 = 0x3F;  r11 = 0x3F;
         r12 = 0x3F;  r13 = 0x3F;  r14 = 0x3F;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x01;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }


/* ********************************************************************* */

VENDOR IBM         "IBM"
 MODEL  VGA         "VGA"
  CLASS  VGA         "VGA"
   MODE   640x480-16  "640x480 16-color"         /* VGA 640x480 16 color */

      MEMORY(0xA0000,0x10000);        /* Base Address, Length        */
      PORT(0x3C2,0x3CA,0x3CC,0x3DA);  /* General/External registers  */
      PORT(0x3C0,0x3C1);              /* Attribute                   */
      PORT(0x3C4,0x3C5);              /* Sequencer                   */
      PORT(0x3C7,0x3C8,0x3C9);        /* Color registers             */
      PORT(0x3CE,0x3CF);              /* Graphics                    */
      PORT(0x3D4,0x3D5);              /* CRTC                        */

      DATA
         {
         XDRIVER     = "mw";
         VISUAL      = "PseudoColor";
         DEPTH       = 4;
         DEVTYPE     = 01;
         DEVTECH     = 0x0D;            /* VGA */
         PIXBYTES    = 80;
         PIXWIDTH    = 640;
         PIXHEIGHT   = 480;
         PIXBITS     = 1;
         PIXPLANES   = 4;
         MAPTYPE     = "EGA";
         BASEADDRESS = 0xA0000;
         INTERLEAVE  = 1;
         INTERSIZE   = 80;
         }

      PROCEDURE SetGraphics
         {
         in(r63,0x3DA);                   /* reset attr F/F  */
         out(0x3C0,0);                    /* disable palette */

         r0 = 1;  r1 = 1;  r2 = 0x0F;  r3 = 0;  r4 = 6;
         bout(5,0x3C4,0x3C5);             /* reset, sequencer regs */

         out(0x3C2,0xE3);                 /* misc out reg */
         r0=3;  bout(1,0x3C4,0x3C5);      /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x54;  r5  = 0x80;  r6  = 0x0B;  r7  = 0x3E;
         r8  = 0x00;  r9  = 0x40;  r10 = 0x00;  r11 = 0x00;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0xEA;  r17 = 0x8C;  r18 = 0xDF;  r19 = 0x28;
         r20 = 0x00;  r21 = 0xE7;  r22 = 0x04;  r23 = 0xE3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x00;  r6  = 0x05;  r7  = 0x0F;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attribute flip/flop */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x01;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x00; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

      PROCEDURE SetText
         {
         in(r63,0x3DA);                   /* reset attr F/F */
         out(0x3C0,0);                    /* disable palette */

         r0 = 0x01;  r1 = 0x00;  r2 = 0x03;  r3 = 0x00;  r4 = 0x02;
         bout(5,0x3C4,0x3C5);             /* sequencer regs */

         out(0x3C2,0x67);                 /* misc out reg   */
         r0=0x03; bout(1,0x3C4,0x3C5);    /* sequencer enable */

         out(0x3D4,0x11); out(0x3D5,0);   /* unprotect crtc regs 0-7 */
         r0  = 0x5F;  r1  = 0x4F;  r2  = 0x50;  r3  = 0x82; /* crtc */
         r4  = 0x55;  r5  = 0x81;  r6  = 0xBF;  r7  = 0x1F;
         r8  = 0x00;  r9  = 0x4F;  r10 = 0x0D;  r11 = 0x0E;
         r12 = 0x00;  r13 = 0x00;  r14 = 0x00;  r15 = 0x00;
         r16 = 0x9C;  r17 = 0x8E;  r18 = 0x8F;  r19 = 0x28;
         r20 = 0x1F;  r21 = 0x96;  r22 = 0xB9;  r23 = 0xA3;
         r24 = 0xFF;  bout(25,0x3D4,0x3D5);

         out(0x3CC,0x00); out(0x3CA,0x01); /* graphics controller */
         r0  = 0x00;  r1  = 0x00;  r2  = 0x00;  r3  = 0x00;
         r4  = 0x00;  r5  = 0x10;  r6  = 0x0E;  r7  = 0x00;
         r8  = 0xFF;  bout(9,0x3CE,0x3CF);

         in(r63,0x3DA);                   /* reset attr F/F */

         r0  = 0x00;  r1  = 0x01;  r2  = 0x02;  r3  = 0x03; /* palette    */
         r4  = 0x04;  r5  = 0x05;  r6  = 0x14;  r7  = 0x07;
         r8  = 0x38;  r9  = 0x39;  r10 = 0x3A;  r11 = 0x3B;
         r12 = 0x3C;  r13 = 0x3D;  r14 = 0x3E;  r15 = 0x3F;
         r16 = 0x0C;  r17 = 0x00;  r18 = 0x0F;  r19 = 0x08; /* attr cntlr */
         bout(20,0x3C0,0x3C0);

         out(0x3C0,0x20);                 /* enable palette */
         }

/* End of File - IBM/VGA.XGI */
