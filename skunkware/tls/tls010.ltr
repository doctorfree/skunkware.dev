The compressed tar file fss.tar.Z contains a few examples and comments that
pertain to the File System Switch facilities in SCO UNIX.  Remember,
this is unsupported, and probably dangerous stuff.  Use at your
own risk.

	File System Switch (FSS) is an interface which allows
	custom file systems to be added to a UNIX System V release 3
	system.

	In order to implement a custom filesystem, you must write
	a number of filesystem dependent routines which interface
	with a filesyetem independent layer in the UNIX kernel.

	The custom filesystem module itself is linked into the
	UNIX kernel in a manner similar to a hardware device driver.
	A detailed description of the installation of a custom
	filesystem is outside the scope of this document, however
	here is a summary of the necessary configuration files.
	(For the purposes of this discussion it will be assumed
	that the file system to be added is the "XYZ" filesytem
	and that the names of all of the filesystem dependent
	routines have the prefix "xyz".

	The following files and directories have to be supplied:

	/etc/conf/pack.d/xyz/Driver.o	- the XYZ filesystem support
					  module itself
	/etc/conf/pack.d/xyz/space.c	- space.c file for the XYZ
					  filesystem
	/etc/conf/mfsys.d/xyz		- XYZ filesystem master configuration
					  file
	/etc/conf/sfsys.d/xyz		- XYZ filesystem system configuration
					  file

	The format of the mfsys and sfsys files is documented in
	the manual pages for MFSYS(F) and SFSYS(F) respectively.

	The function of the mfsys file is to declare the name of
	the filesystem, the prefix which is added to the name of
	each filesystem dependent routine, two sets of flags and
	a bitmask of ones and zeroes which defines which filesysytem
	dependent routines are actually implemented in this particular
	filesystem.

	The sfsys file is used to indicate whether the filesystem
	should actually be configured into the kernel.

	Typically the space.c file will be used to define storage
	for filesystem dependent data structures such as the
	filesytem "super-block" (or equivalent) and filesystem
	dependent "inode" structures or equivalent.
