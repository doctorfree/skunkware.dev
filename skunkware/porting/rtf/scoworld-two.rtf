{\rtf1\ansi\deff0
{\fonttbl{\f2\fnil\fcharset0 Courier New;}
{\f1\fnil\fcharset0 Arial;}
{\f0\fnil\fcharset0 Times New Roman;}
}
{\colortbl;}{\stylesheet{\s1 Heading 1;}{\s2 Heading 2;}{\s3 Heading 3;}{\s4 Heading 4;}{\s5 Heading 5;}{\s6 Heading 6;}{\s7 Heading 7;}{\s8 Heading 8;}{\s9 Heading 9;}}
\deflang1024\notabind\facingp\hyphauto1\widowctrl
\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {\i Porting Open Source Software to SCO}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {\i \chpgn }\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i Porting Open Source Software to SCO}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i \chpgn }\par}\pard\s1\li960\sl-647\qc \b\fs49\f1 Porting Open Source Software to SCO\keepn\hyphpar0\par\pard\li960\sl-312\qc \b0\i\fs24 Dr. Ronald Joe Record\keepn\hyphpar0\par\pard\li960\sl-250\qc \fs19 Open Source Program Architect\keepn\hyphpar0\par\pard\li960\sl-250\qc SCO\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \i0\fs24\f0 Much of the most useful and popular software today is published and distributed in source form. The Apache web server, KDE, the Mtools DOS utilities and the GNU C compiler are a few examples of what is commonly referred to as Open Source software. This article attempts to provide some insight, tips, techniques and methodology for building Open Source software on and for SCO OpenServer 5, UnixWare 7 and in general.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Setting Up Your Development Environment\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 Perhaps the single most important step in porting \i any\i0  software is the creation of an appropriate build environment. Fortunately, on SCO OpenServer 5 and UnixWare 7, much of the work has already been done for you. On either platform, simply install the base Operating System, native development system, Java Development Kit and the SCO Skunkware CD included in the Operating System media kit.\hyphpar0\par\pard\sb120\li960\sl-312 If you are not a licensed Development System user you can still build an appropriate development environment by utilizing the GNU development system along with the native libraries and headers. On OpenServer you will need to install the "Linkers and Application Libraries" package of the Development System (no license key is required). On either platform you can simply install the Development System sans license key.\hyphpar0\par\pard\sb120\li960\sl-312 After having installed the Operating System, development system of choice, and SCO Skunkware you will now have access to the standard tools necessary to build most Open Source packages. These tools include the GNU Compiler Collection, Bison, Flex, GNU Make, autoconf, automake, and a wide variety of header files and libraries.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Where and How to Obtain Open Source Software\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 There are a number of excellent Open Source "portals" on the Internet. These are sites which provide links and references to the thousands of Open Source projects. Good starting points include: \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The SCO Skunkware web site at http://www.sco.com/skunkware. Each of the Skunkware components described here contains a link to the binary distribution for either OpenServer or UnixWare 7 as well as a link to the original source and project home page (if any). Additionally, there's a table of links at http://www.sco.com/skunkware/links.html. \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The Freshmeat web site at http://freshmeat.net. \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The FileWatcher web site at http://filewatcher.org. \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The WebWatcher web site at http://webwatcher.org. \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 Sunsite's Linux archive at ftp://sunsite.unc.edu/pub/Linux/welcome.html. Note that many sites indicate their Open Source projects are for Linux when, in fact, the source is portable across most modern UNIX platforms as well.\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The Open Source Who's Who http://support.lcg.org/Whoswho/. \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 The Free Software Foundation FTP download area at ftp://ftp.gnu.org/gnu/. \hyphpar0\par\pard\sb120\li960\sl-312 Another method for obtaining access to the very latest development sources for many Open Source projects is Anonymous CVS. After installing SCO Skunkware you will have the necessary CVS utilities in \fs21\f2 /usr/local/bin\fs24\f0 . To download a project's source tree via CVS, login to the CVS server with the project password, checkout the desired source, and logout. The project home page will supply you with the CVS server name and password if they are maintaining an anonymous CVS source repository. I've written a script to automate this procedure for several projects. You can download this script via http://www.sco.com/skunkware/src/devtools/cvsget.gz\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Configuring Open Source Software for Compilation\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 After identifying an Open Source package of interest, locating it, and downloading the source archive it is typically the case that the source needs to be unpacked and configured for your platform. Most source archives downloadable over the Internet are compressed tar archives. To extract on of these, say \fs21\f2 widget-1.0.tar.gz\fs24\f0 , issue the command: \hyphpar0\par\pard\sb240\li960\sl-312     gzcat widget-1.0.tar.gz | tar xf -\hyphpar0\par\pard\sb240\li960\sl-312 It is often prudent to first simply list the contents of the archive to determine if it extracts into it's own subdirectory. If not, create a subdirectory and extract the archive from there.\hyphpar0\par\pard\sb120\li960\sl-312 Once extracted the source project needs to be configured for your platform. Most modern Open Source projects use GNU Autoconf to provide configuration scripts which attempt to automate the configuration process. In the simplest cases it will only be necessary to run the \fs21\f2 configure\fs24\f0  script: \hyphpar0\par\pard\sb240\li960\sl-312     cd widget-1.0 ; ./configure\hyphpar0\par\pard\sb240\li960\sl-312 Unfortunately, it is often necessary to "help" \fs21\f2 configure\fs24\f0  understand your platform. For instance, on UnixWare 7 it is sometimes necessary to: \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 replace configure's "-lnsl" with "-lsocket -lnsl"\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 replace configure's "-lICE" with "-lSM -lICE"\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 order "-lSM -lICE" after "-lXt" but prior to "-lX11" on the link line\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 rearrange the order of certain graphics libraries like JPEG, TIFF, PNG or others\hyphpar0\par\pard\sb120\li960\sl-312 A typical link line for a graphical application might include: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 -L/usr/local/lib -lXpm -ltiff -ljpeg -lpng -lz -lXaw -lXmu -lXt -lSM -lICE -lXext -lX11 -lm -lsocket -lnsl -lgen\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 Many of these idiosyncracies, due in part to the single-pass nature of the native linker, can be simply accomodated by rerunning autoconf which regenerates the \fs21\f2 configure\fs24\f0  script from the \fs21\f2 configure.in\fs24\f0  file for your platform.\hyphpar0\par\pard\sb120\li960\sl-312 Another configuration area that often causes problems is the building of shared libraries. The \fs21\f2 ltconfig\fs24\f0  script contains the platform-specific instructions and options for creating shared libraries. In order to build shared libraries on UnixWare 7 it is necessary to modify \fs21\f2 ltconfig\fs24\f0  and add the following to the appropriate case statements: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 sysv5*)\sa0\par\fi0\sb0
  pic_flag='-KPIC'\sa0\par\fi0\sb0
  link_static_flag='-Bstatic'\sa0\par\fi0\sb0
  wl='-Wl,'\sa0\par\fi0\sb0
  ;;\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
sysv5*)\sa0\par\fi0\sb0
  archive_cmds='$LD -G -h $rpath/$soname -o $lib$libobjs'\sa0\par\fi0\sb0
  runpath_var=LD_RUN_PATH\sa0\par\fi0\sb0
  hardcode_runpath_var=yes\sa0\par\fi0\sb0
  hardcode_shlibpath_var=no\sa0\par\fi0\sb0
  ;;\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
sysv5*)\sa0\par\fi0\sb0
  version_type=osf\sa0\par\fi0\sb0
  soname_spec='$libname.so.$major'\sa0\par\fi0\sb0
  library_names_spec='$libname.so.$versuffix $libname.so.$major $libname.so'\sa0\par\fi0\sb0
  shlibpath_var=LD_LIBRARY_PATH\sa0\par\fi0\sb0
  ;;\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 By default, \fs21\f2 configure\fs24\f0  will use the GNU C Compiler. If you wish to use an alternate compiler the CC environment variable can be set appropriately. On UnixWare 7 the Skunkware components are built with the native compiler for performance and portability reasons. As a convenience i've constructed simple shell scripts to front-end the \fs21\f2 configure\fs24\f0  script. For instance, on UnixWare 7 to use the native C compiler: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 #!/bin/sh\sa0\par\fi0\sb0
HOST=i586-sco-sysv5\sa0\par\fi0\sb0
[ -f mout-config ] && mv mout-config mout-config$$\sa0\par\fi0\sb0
CC="cc"\sa0\par\fi0\sb0
CPP="$CC -E"\sa0\par\fi0\sb0
CFLAGS="-Xa -Dasm=__asm -DANSICPP -O3 -Kthread -Kalloca -I/usr/local/include -L/usr/local/lib"\sa0\par\fi0\sb0
CXX="CC"\sa0\par\fi0\sb0
CXXFLAGS="-O3 -I/usr/local/include/stl -I/usr/local/include -L/usr/local/lib"\sa0\par\fi0\sb0
RANLIB=true\sa0\par\fi0\sb0
MAKE=/usr/local/bin/make\sa0\par\fi0\sb0
export CC CPP CXX RANLIB MAKE CFLAGS CXXFLAGS\sa0\par\fi0\sb0
./configure $* $HOST 2>&1 | tee mout-config\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 Note the use of "-Kthread -Kalloca". These enable threads and the built-in alloca function. The check for threads support in \fs21\f2 configure\fs24\f0  often fails on UnixWare 7. If you wish to include threads support it may be necessary to modify \fs21\f2 configure\fs24\f0  and/or \fs21\f2 config.h\fs24\f0 . On SCO OpenServer the use of threads can be accomplished via the FSU Pthreads package on Skunkware. To use FSU Pthreads the application should include <pthread.h> and link with the "-lgthreads" linker option.\hyphpar0\par\pard\sb120\li960\sl-312 After running the \fs21\f2 configure\fs24\f0  script it is a good idea to examine the output which is stored in the file config.log. You may also need to edit the generated \fs21\f2 config.h\fs24\f0 , if any. Running \fs21\f2 configure\fs24\f0  with a tee to a log file \hyphpar0\par\pard\sb240\li960\sl-312     ./configure | tee mout-config\hyphpar0\par\pard\sb240\li960\sl-312 will allow you to examine both the config.log and mout-config for possible errors in the configuration.\hyphpar0\par\pard\sb120\li960\sl-312 Many programs use the Imake system to configure the source for a particular platform. These will have an \fs21\f2 Imakefile\fs24\f0  which is used to generate the Makefile. To configure such a source hierarchy for compilation on your system simply run: \hyphpar0\par\pard\sb240\li960\sl-312     xmkmf -a\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Compiling Open Source Software\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 Once configured properly most Open Source software can be compiled by simply running "make". I use GNU make almost exclusively due to its widespread use in the Open Source community and the incompatibilities with System V make and different feature set. To be sure you are using GNU make rather than System V make, place \fs21\f2 /usr/local/bin\fs24\f0  prior to \fs21\f2 /bin\fs24\f0  or \fs21\f2 /usr/bin\fs24\f0  in your execution path. For example: \hyphpar0\par\pard\sb240\li960\sl-312     PATH=/usr/local/bin:$PATH\sa0\par\fi0\sb0
    export PATH\hyphpar0\par\pard\sb240\li960\sl-312 To generate a logfile of the output from your compile, make can be piped to a tee as follows: \hyphpar0\par\pard\sb240\li960\sl-312     make 2>&1 | tee mout\hyphpar0\par\pard\sb240\li960\sl-312 After successfully compiling the source files and reviewing the logfiles many Makefiles include a "test" or "check" rule which runs any included automated tests. To run these, issue the command: \hyphpar0\par\pard\sb240\li960\sl-312     make test 2>&1 | tee mout-test\sa0\par\fi0\sb0
or\sa0\par\fi0\sb0
    make check 2>&1 | tee mout-check\hyphpar0\par\pard\sb240\li960\sl-312 Finally, after compiling and testing the build, install the software with: \hyphpar0\par\pard\sb240\li960\sl-312     make install 2>&1 | tee mout-install\hyphpar0\par\pard\sb240\li960\sl-312 Forum presentation(s)\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Modifying Open Source Software\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 When modifying Open Source software it is important to keep cross-platform portability in mind. The source you modify will in all likelihood be built on a wide variety of platforms. Your modifications cannot break either the build or functionality of the software on any other platform. It's also quite possible that your modifications could be useful to another platform. Thus, when possible, avoid platform-specific modifications like: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 #if defined(__USLC__) /* UnixWare */\sa0\par\fi0\sb0
#define FOOBAR 1\sa0\par\fi0\sb0
#elif defined(_SCO_DS) /* OpenServer */\sa0\par\fi0\sb0
#define FOOBAR 0\sa0\par\fi0\sb0
#endif /* __USLC__ */\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 Whenever possible make such a modification based upon defines generated by the \fs21\f2 configure\fs24\f0  script. For example, \fs21\f2 configure\fs24\f0  might write out in the \fs21\f2 config.h\fs24\f0  file a define of something like HAVE_FOOBAR or NEED_FOOBAR. If so, a more portable construct for the same modification might look like: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 #if defined(NEED_FOOBAR)\sa0\par\fi0\sb0
#define FOOBAR 1\sa0\par\fi0\sb0
#endif /* NEED_FOOBAR */\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 When making platform-specific modifications, the __USLC__ manifest define can be used for UnixWare and the _SCO_DS for OpenServer. If the application has been ported to Sun Solaris then it is often possible to simply change: \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 #if defined(SOLARIS)\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 to \hyphpar0\par\pard\sb240\li960\sl-281 \fs21\f2 #if defined(SOLARIS) || defined(__USLC__) || defined(_SCO_DS)\hyphpar0\par\pard\sb240\li960\sl-312 \fs24\f0 SCO OpenServer and UnixWare 7 are POSIX, XPG4, UNIX 95 and mostly UNIX 98 compliant. Often there are defines for these either in config.h or another header file. Most applications which comply with one or more of these standards will simply compile and link. Occasionally trivial modifications are necessary. For example, the location of the declaration of a function might reside in different header files and libraries on different systems. Usually the \fs21\f2 man\fs24\f0  command will indicate the syntax for inclusion of the declaration and any additional libraries to link against.\hyphpar0\par\pard\sb120\li960\sl-312 An excellent document on porting to UnixWare 7 is available at http://www.sco.com/forum1999/conference/develop/d16/. This document goes into these issues in much greater detail than is possible here.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Contributing to Open Source Projects\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 The Open Source development model relies upon contributions from vendors, developers, users and the primary development group. If you have successfully ported an Open Source project to a new platform or you have made source level modifications to enhance the software or fixed a bug, you can and should return your modifications to the project maintainers. In the case of ports and fixes for SCO platforms you may wish to first submit your modifications to the Skunkware development team for review and integration with other modifications to that package. To do so, e-mail your modifications to skunkware@sco.com.\hyphpar0\par\pard\sb120\li960\sl-312 Generally, modifications to an Open Source project are returned by e-mailing a context diff of the relevant changes. That is, if you modified source files \fs21\f2 foo.c\fs24\f0  and \fs21\f2 bar.h\fs24\f0  of project fubar release 1.0, you would create a context diff of these files: \hyphpar0\par\pard\sb240\li960\sl-312     diff -c foo.c.00 foo.c > mydiff-fubar-1.0\sa0\par\fi0\sb0
    diff -c bar.h.00 bar.h >> mydiff-fubar-1.0\hyphpar0\par\pard\sb240\li960\sl-312 This type of file difference is suitable for input to the patch utility. After creating the patch, test it on a fresh fubar 1.0 source tree. To return the modification, simply e-mail either the author of the program or, more commonly, the developer mailing list for the project. For instance: \hyphpar0\par\pard\sb240\li960\sl-312     mail fubar-dev@fubar.org\hyphpar0\par\pard\sb240\li960\sl-312 These mailing lists are an excellent means of staying abreast of the latest patches, releases, developer discussions, etc. Usually subscription is open or the list is archived for perusal by the public. Note that the above example is illustrative only. To determine the available mailing lists for a project, visit the project web site.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Contributing to SCO Skunkware Open Souce Software\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 If you would like to contribute to the ongoing effort to provide quality Open Source products to SCO customers: \hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 Read the Skunkware FAQ at http://www.sco.com/skunkware/faq.html\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 Read the Skunkware submission guidelines at http://www.sco.com/skunkware/submission.html\hyphpar0\par\pard\sb120\li1200\sl-312\fi-240 \tx1200 \fs19 \'95\tab \fs24 Join the polecats mailing list by sending an e-mail message to polecats-request@scofolks.ocston.org with any subject line and a single line in the body of the message: \hyphpar0\par\pard\sb120\li1200\sl-312       subscribe\hyphpar0\par\pard\sb120\li960\sl-312 The software on the Skunkware CD-ROM is licensed under a variety of terms. Much of it is licensed under the terms of the GNU General Public License. Some is licensed under the GNU Library General Public License. Other components are licensed under the Artistic License. Many of the components are "Freeware" with no restrictions on their redistribution while a few components are "Shareware" meaning the author would like you to try the software and, if you wish to use it, send her some money. A few components are commercial products which can be used freely for non-commercial purposes. Some components simply restrict their use to non-commercial purposes.\hyphpar0\par\pard\sb120\li960\sl-312 The Santa Cruz Operation, Inc. and SCO Skunkware are not related to, affiliated with or licensed by the famous Lockheed Martin Skunk Works (R), the creator of the F-117 Stealth Fighter, SR-71, U-2, Venturestar(tm), Darkstar(tm), and other pioneering air and spacecraft.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 Author and Contributors\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 Ronald Joe Record has worked for The Santa Cruz Operation for over 16 years.\hyphpar0\par\pard\sb120\li960\sl-312 Record holds a Ph.D. in Mathematics from the University of California.\hyphpar0\par\pard\sb120\li960\sl-312 David Eyes (davidey@sco.com) contributed to this document in design, review and editorial matters.\hyphpar0\par\pard\sb240\s5\li960\sl-312 \b\f1 About This Document\keepn\hyphpar0\par\pard\sb120\li960\sl-312 \b0\f0 This document was created using SGML-Tools 2.0.2, Jade 1.2.1 and teTeX 0.9 running on UnixWare 7.\hyphpar0\par\pard\sb120\li960\sl-312 The source to this document is maintained at http://www.sco.com/skunkware/sgmldocs/scoworld-two.sgml. A Makefile and formatted varieties of this document are also available at http://www.sco.com/skunkware/sgmldocs/. For instance, you will find a postscript version at http://www.sco.com/skunkware/sgmldocs/ps/scoworld-two.ps. Finally, an HTML version of this and other porting documents will be available at http://www.sco.com/skunkware/porting/.\hyphpar0\par}
