SCO SCCS ID: @(#) README 12.1 95/05/09 

This is the source directory for XCONQ, a multi-player strategy game.
The code herein includes interfaces for curses, X V10R4, and X V11R2.

(Note to sites with earlier release - this release is INCOMPATIBLE.
If you wish to have both, name one or the other differently!)

1. Look at config.h and edit as desired.  The most important item is
the system you're using.  There are also some noncritical options, which
need be changed only for special needs.  Config.h does *not* specify whether
curses or X will be used - that is decided at link time.

2. Edit the makefile's definitions for library and other directories,
as appropriate for local customs.

3. Select the versions that you want to build by editing the VERSIONS macro
in the makefile.  "cconq" is curses only (should work on almost anything),
"xconq" and "x11conq" are X10 and X11 programs, respectively.  Check the
makefile to make sure that the correct libraries are being linked.  Also,
some systems may have the X include files in strange places - if compilation
fails, check the interface file source code (X10.c, and so forth).

4. Do "make all" to build the versions selected.

5. Do extra things needed by some of the versions:

5a. The curses version needs no special setup.

5b. X10 fonts *.onx are binary and need to be uudecoded; do "make X10fonts".
Decide what to do about the fonts.  If your X can load from an absolute
pathname, then make sure they're in the xconq library directory. They can
also live in the default X font directory - xconq will always look in both
places for a font.  Finally, it may be possible to use the X defaults to
specify a path somewhere - look at the file "Xdefaults" for an example.
In any case, the fonts must be present on the *server* machine, since the
X library just passes the fonts' pathnames on to the server.  xconq will
still function without these fonts, but the display is almost impossible
to comprehend.

5c. X11 fonts *.bdf are text and need to be compiled; do "make X11fonts",
which will produce fonts *.snf.  These can be handled much as for the X10
fonts - put in library directory, standard X font directory, or someplace
mentioned in your .Xdefaults.

6. If you set things to run in the current dir, just say "cconq" or "xconq"
(or whatever) and play.  If you want the executables in standard places,
use "make install" (this action may need modification, depending on which
interfaces are in use).  There is also a "make rinstall" for remote
installation, which may be desirable in some workstation environments;
study the makefile for more details.

7. The man pages just tell how to start up the programs; xconq.doc has
complete details on every aspect of play.  A lot of behavior can be figured
out by experimentation and by using the extensive online help ('?' should
always provide something).

8. If installed in a public place, announce availability.  The library
file "xconq.news" provides a convenient place to put in any notes about
changes, new maps/scenarios, and so forth.

9. If you get bored with the standard game, look at "custom.doc", which
tells how to build your own historical periods, maps, and scenarios.
Many have already been defined; all are in the library directory.

If you have any maps created by version 1.0, they can be converted to
an approximate equivalent using the program "hexify".  This program is
not made by default; "make hexify" should create it.  Hexify takes an old
map on standard input and writes a new one to standard output.  The new
map is somewhat different, and may need some hand-editing.

The program has been tested on HP9000/300 running HP-UX and BSD, Suns, and
Vaxen running BSD 4.3 and Ultrix, and probably other systems as well.
Moving to other graphics environments should not be too difficult, since
all the user interface goes through about 50 abstract functions.  (Suntools,
Macintosh, and Atari ST would be good candidates.)  Non-Un*x should be
straightforward also, since there are only a handful of Un*x system calls,
and none of those are absolutely required.  Please contact me about any
portability problems.

Finally, to repeat what is all over the files, you may copy, redistribute,
modify, or even mangle the code, as long as the copyright notices are
retained, and you don't try to sell it.  Common decency dictates that
you identify your changes before passing the sources on.  Also I would
enjoy seeing any improvements/fixes/suggestions, and will try to incorporate
them in future versions of XCONQ.

						stan shebs
						shebs@cs.utah.edu
						shebs@utah-cs.uucp


VERSION 5 CHANGES

This version is quite different from version 1 (versions 2-4 were interim
only, never released).  Best approach is to treat this as a new program,
and not assume that things will be the same as previously.  I can only list
the most sweeping changes here:

* merger of units and cities into one kind of object.
* maps based on hexes instead of squares.
* new types of orders for patrolling and following.
* smarter machine players.
* postfix interpreter for period descriptions.
* many more parameters in a period.
* period-definable terrain types.
* generalized and flexible map file format.
* online editing of maps and scenarios.
* rearranged display, including a status window for units.
* survey mode for players while another player is moving.
* "chess clock" for timing games.
* interactive game setup.
* better attempts to handle unusual X implementations.
* interfaces for X10, X11, and curses.

There are a host of smaller changes as well, for instance input of unit
type (as for production) is case-sensitive now.  Many commands have been
assigned to different characters, or have different (hopefully more logical)
behavior.

Also, I want to thank the many XCONQ players around the net who have sent
in literally hundreds of suggestions, fixes, and improvements. The manual
includes more detailed acknowledgments.
