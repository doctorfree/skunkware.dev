0.  YOU NEED AN ANSI C COMPILER!  A C++ compiler may also work (try it!)  
    Frisk will eventually be rewritten in C++ anyway :)  POSIX compliance 
    would probably help.
1a. If you have imake, type `xmkmf' to create the Makefile.  Then create the
    binaries by typing `make'.  If you wish to install the binaries in a
    non-standard place, type `make BINDIR=<binary path>'.  If you want the
    library files (i.e. the map and such) to be placed somewhere non-standard,
    then type `make LIBDIR=<library path>'.  Both options may be used in
    conjunction.  For example:

	> xmkmf
	> make BINDIR=/usr/local/bin LIBDIR=/usr/local/lib

    Or to build and install them, type

	> make BINDIR=/usr/local/bin LIBDIR=/usr/local/lib install

    NOTE:  If you _build_ the binaries with a specified BINDIR or LIBDIR, 
    remember to _install_ them with the same options.  Or even better, build
    and install them with the same command, as above.

    NOTE 2: Frisk is forgiving.  It uses default resources if it can't find 
    the installed ones, and if it can't find its data files, it looks in 
    the current directory.  So if you're just trying Frisk out, you can 
    just type `xmkmf;make' to get fully working binaries without any need 
    for root priviledges or installing anything.
1b. If you don't have imake, get it.  Sorry...
2.  Try it out by running `friskserver' and then `xfrisk <host>.'  You can run
    the former in the background if you wish.  For <host>, put in the name 
    of the machine on which the server is running.  For example, if both
    are running on the same machine, then type:

	> friskserver &
	> xfrisk 127.0.0.1

    Or if the last command fails, try:

	> xfrisk localhost

    Or you can just run the `risk' script, which does this for you.  It uses
    localhost.  If 127.0.0.1 works for you, then edit the script and change
    it.  If both localhost and 127.0.0.1 (loopback device) fail for you, 
    try the actual name of your machine (you can do this through
        > xfrisk `hostname`
    which you can also put in the script).
3.  If something fails, let me know about it: feingold@zko.dec.com
4.  Enjoy it!

