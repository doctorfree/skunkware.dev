Screen - window manager - Version 3.2

author(s): Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
    Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)

compiled by: Andrew Josey, andrew@uel.co.uk
status: This program is free software; taken from comp.sources.unix posting
upload by: idem


Short description.

"screen" is a window manager that allows you to handle several independent
screens (UNIX ttys) on a single physical terminal; each screen has its own
set of processes connected to it (typically interactive shells).  Each
virtual terminal created by "screen" emulates a DEC VT100 plus several ANSI
X3.64 and ISO 2022 functions (including DEC VT102 features such as line and
character deletion and insertion).

If you want to get a quick idea how "screen" works but don't want to read
the entire manual, do the following:

     -  call "screen" without arguments
     -  wait for the shell prompt; execute some commands
     -  type ^A ^C (Control-A followed by Control-C)
     -  wait for the shell prompt; do something in the new window
     -  type ^A ^A repeatedly to switch between the two windows
     -  terminate the first shell ("screen" switches to the other window)
     -  terminate the second shell
Screen 3.2 README

The screen software package follows the ABI conventions for add-on
packages and is  installed in /opt. It is wise to
change the default PATH setting to include /opt/bin in /etc/profile.

This package was obtained from comp.sources.unix.

To install the package the simplest way follows:

1. Extract the tar archive. The example will extract it into /tmp/pkg

$ cd /tmp
$ mkdir pkg   # make a temp directory for the package

$ tar xvf /home/andrew/pkgs/Screen/screen*pkg.tar
x Screen, 0 bytes, 0 tape blocks
x Screen/pkgmap, 300 bytes, 1 tape blocks
x Screen/pkginfo, 238 bytes, 1 tape blocks
x Screen/root, 0 bytes, 0 tape blocks
x Screen/root/opt, 0 bytes, 0 tape blocks
x Screen/root/opt/bin, 0 bytes, 0 tape blocks
x Screen/root/opt/bin/screen, 189276 bytes, 370 tape blocks
x Screen/root/opt/man, 0 bytes, 0 tape blocks
x Screen/root/opt/man/man1, 0 bytes, 0 tape blocks
x Screen/root/opt/man/man1/screen.1, 63790 bytes, 125 tape blocks
x Screen/install, 0 bytes, 0 tape blocks
x Screen/install/copyright, 851 bytes, 2 tape blocks
$


2. Install the package from /tmp/pkg

$ su    # to install the pkg su
# pkgadd -d /tmp/pkg

The following packages are available:
  1  Screen     Screen Window Manager
                (i386) iScreen version 3.02.00 (FAU) 01/31/92

Select package(s) you wish to process (or 'all' to process
all packages). (default: all) [?,??,q]:


3. Creating an Installible Floppy

To create an installible floppy use the pkgtrans command, for example:

# pkgtrans /tmp/pkg diskette1


4. Displaying the package information.

   PKGINST:  Screen
      NAME:  Screen Window Manager
  CATEGORY:  application
      ARCH:  i386
   VERSION:  iScreen version 3.02.00 (FAU) 01/31/92
    VENDOR:  (c) 1991 J.Weigart, Michael Schroeder, 1987 Oliver Laumann
    PSTAMP:  avalon921123141958
  INSTDATE:  Nov 23 1992 02:20
    STATUS:  completely installed
     FILES:      6 installed pathnames
                 4 shared pathnames
                 4 directories
                 2 executables
                 2 setuid/setgid executables
               495 blocks used (approx)

5. Removing the package

To remove the package after installation:
# pkgrm Screen

----------------------------

The following is some useful information from the Source package.

"screen" is a window manager that allows you to handle several independent
screens (UNIX ttys) on a single physical terminal; each screen has its own
set of processes connected to it (typically interactive shells).  Each
virtual terminal created by "screen" emulates a DEC VT100 plus several ANSI
X3.64 and ISO 2022 functions (including DEC VT102 features such as line and
character deletion and insertion).

Since "screen" uses pseudo-ttys, the select system call, and UNIX-domain
sockets, it will not run under a system that does not include these
features of 4.2 and 4.3 BSD UNIX.

If you want to get a quick idea how "screen" works but don't want to read
the entire manual, do the following:

     -  call "screen" without arguments
     -  wait for the shell prompt; execute some commands
     -  type ^A ^C (Control-A followed by Control-C)
     -  wait for the shell prompt; do something in the new window
     -  type ^A ^A repeatedly to switch between the two windows
     -  terminate the first shell ("screen" switches to the other window)
     -  terminate the second shell

To get screen to do everything it was designed to do, it should be installed
set-uid root.  This enables it to modify the ownership of the pseudo-ttys,
update /etc/utmp, and read the current load average from /dev/kmem.

Failing to install it suid root (e.g. if you fear a trojan horse) doesn't
have any major disadvantages, except that w(1) and some other utilities
will display only "screen" as the current process, and the pseudo ttys
(ptys) used for the virtual terminals won't have their owners set.  Screen
can provide you some pty security by opening the ptys exclusively, but
this has the unfortunate side-effect of keeping your own subprocesses from
being able to open /dev/tty.

It is also possible to create a special "screen" group and give the file
/etc/utmp screen-group write-access, and give the file /dev/kmem screen-group
read access to get all the features except the pty-ownership changes.  Some
people also install it set-gid "kmem" or set-gid "utmp" to give it one or
the other.



Short introduction to screen (Version 3.0.7)                  jw 7.9.91


screen 
  provides you with an ansi/vt100 terminal emulator, which can multiplex
  up to 10 pseudo-terminals. On startup, it executes $SHELL in window 0.
  Then it reads $HOME/.screenrc to learn configuration, keybindings, 
  and may open more windows.

  C-A C		Create new windows.

  C-A SPACE	Advance from window to window (with wraparound)

  C-A C-A	Toggle between two windows.

  C-A 0
   ...
  C-A 9		Switch to window nr. 0 ... 9.

  C-A w		Show a list of windows in the Statusline.

  C-A a		(Think of goto-start-of-line in emacs or tcsh).
  C-A s		(Think of i-search in emacs).
  C-A q		Send a literal C-A/C-S/C-Q to the process in the window.

  C-A l		Redraw this window.

  C-A W		Toggle between 80 & 132 columns mode. 

  C-A L		Try to toggle the utmp-slot for this window.

  C-A A		Prompt for a new name for this window. (see C-A w).

  C-A z		Suspend the whole screen.

  C-A x		Execute /usr/bin/lock or $LOCKCMD or a builtin terminallock.

  C-A C-[	Start copy&paste mode. Move cursor with h,j,k,l. Set 2 marks
		with SPACE or y. Abort with ESC. Note that "C-[" is ESC.
		NOTE: there is a userdefined amount of scrollback history.
                The history buffer is entered, when the cursor hits the top
		of the window.

  C-A C-]	paste in current window's stdin. see C-A C-[.

  C-A <
  C-A >		Read or write the copybuffer from/to the exchange file.
		Multiple screen users on the same host may thus transfer text.

  C-A d		Detach screen. All processes continue and may spool output
		to their pty's, but screen disconnects from your terminal.
		reattach with "screen -r".

  C-A D D	Power detach. Disconnect like C-A d and kill the parent shell.

  C-A K		Kill a window and send SIGHUP to its processgroup. Per default
		this would be C-A C-k. But it is redefined in the demo .screenrc
		(think of killing a whole line in emacs).

  C-A :set all  Show all keybindings. The above list is not at all complete and
		may even be wrong, as keys can be redefined in .screenrc or
		with "C-A :bind 'X' keyname [arguments]".

  C-A : ....  Online configuration change.


screen -r [host.tty]
  Reattach a detached screen session. The terminal emulator reconfigures
  according to your $TERMCAP or $TERM settings. '-R' brings up a detached
  session or (if none) creates a new session. You should specify a socket
  when there you have multiple screens detached. 

screen -d [host.tty]
  Detach a screen session from remote. Has the same effect as typing 'C-A d'
  on the controlling terminal. '-D' will power-detach.

screen -list
screen -ls
  Show all available sockets. If there are (DEAD???) sockets, you may consider 
  removing them. If there are sockets missing, you may send a SIGCHLD to its
  process 'SCREEN' and the process will re-establish the socket. (think of 
  someone cleaning /tmp thoroughly).

screen -h 200
  Starts a new screen session and sets the number of lines in the scrollback
  buffer to 200. The default is 50 lines.
