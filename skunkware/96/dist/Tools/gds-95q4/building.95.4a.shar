#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 1995-11-29 23:14 CST by <robertl@rjlhome>.
# Source directory was `/home/robertl/src/scods'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    284 -rw-r--r-- build/install-elf
#    200 -rw-r--r-- build/install-coff
#    209 -rw-r--r-- build/build-elf
#    161 -rw-r--r-- build/build-coff
#    700 -rwxr-xr-x tests/ns_gcc
#    703 -rwxr-xr-x tests/ns_cc
#    289 -rwxr-xr-x tests/ns_diff
#    208 -rwxr-xr-x tests/ns_args
#   1192 -rw-r--r-- tests/test_cdtors
#    546 -rwxr-xr-x tests/test_namespace
#    808 -rwxr-xr-x tests/test_types
#
touch -am 1231235999 $$.touch >/dev/null 2>&1
if test ! -f 1231235999 && test -f $$.touch; then
  shar_touch=touch
else
  shar_touch=:
  echo
  echo 'WARNING: not restoring timestamps.  Consider getting and'
  echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 1231235999 $$.touch
#
# ============= build/install-elf ==============
if test ! -d 'build'; then
  echo 'x - creating directory build'
  mkdir 'build'
fi
if test -f 'build/install-elf' && test X"$1" != X"-c"; then
  echo 'x - skipping build/install-elf (file already exists)'
else
  echo 'x - extracting build/install-elf (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'build/install-elf' &&
:
# $Id: install-elf,v 1.1 1995/11/30 05:11:05 robertl Exp $
# Execute in the ELF build area to install the final image
#
X
make CC='cc -b elf' CFLAGS='-O -s' install-gas install-binutils install-gcc install-gdb install-libg++ install-libstdc++ install-make install-byacc install-flex
SHAR_EOF
  $shar_touch -am 1129231195 'build/install-elf' &&
  chmod 0644 'build/install-elf' ||
  echo 'restore of build/install-elf failed'
  shar_count="`wc -c < 'build/install-elf'`"
  test 284 -eq "$shar_count" ||
    echo "build/install-elf: original size 284, current size $shar_count"
fi
# ============= build/install-coff ==============
if test -f 'build/install-coff' && test X"$1" != X"-c"; then
  echo 'x - skipping build/install-coff (file already exists)'
else
  echo 'x - extracting build/install-coff (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'build/install-coff' &&
:
# $Id: install-coff,v 1.1 1995/11/30 05:11:04 robertl Exp $
# Execute in the COFF build area to install the final image
#
make CC='cc -b elf' CFLAGS='-O -s' install-gas install-binutils install-gcc
SHAR_EOF
  $shar_touch -am 1129231195 'build/install-coff' &&
  chmod 0644 'build/install-coff' ||
  echo 'restore of build/install-coff failed'
  shar_count="`wc -c < 'build/install-coff'`"
  test 200 -eq "$shar_count" ||
    echo "build/install-coff: original size 200, current size $shar_count"
fi
# ============= build/build-elf ==============
if test -f 'build/build-elf' && test X"$1" != X"-c"; then
  echo 'x - skipping build/build-elf (file already exists)'
else
  echo 'x - extracting build/build-elf (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'build/build-elf' &&
:
# $Id: build-elf,v 1.1 1995/11/30 05:11:02 robertl Exp $
# Execute in the ELF build area
#
X
make CC='cc -b elf' CFLAGS='-O -s' all-gas all-binutils all-gcc all-gdb all-libg++ all-libstdc++ all-make         
SHAR_EOF
  $shar_touch -am 1129231195 'build/build-elf' &&
  chmod 0644 'build/build-elf' ||
  echo 'restore of build/build-elf failed'
  shar_count="`wc -c < 'build/build-elf'`"
  test 209 -eq "$shar_count" ||
    echo "build/build-elf: original size 209, current size $shar_count"
fi
# ============= build/build-coff ==============
if test -f 'build/build-coff' && test X"$1" != X"-c"; then
  echo 'x - skipping build/build-coff (file already exists)'
else
  echo 'x - extracting build/build-coff (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'build/build-coff' &&
:
# $Id: build-coff,v 1.1 1995/11/30 05:11:01 robertl Exp $
# Execute in the COFF build area.
#
X
make CC='cc -b elf' CFLAGS='-O -s' all-gas all-binutils all-gcc
SHAR_EOF
  $shar_touch -am 1129231195 'build/build-coff' &&
  chmod 0644 'build/build-coff' ||
  echo 'restore of build/build-coff failed'
  shar_count="`wc -c < 'build/build-coff'`"
  test 161 -eq "$shar_count" ||
    echo "build/build-coff: original size 161, current size $shar_count"
fi
# ============= tests/ns_gcc ==============
if test ! -d 'tests'; then
  echo 'x - creating directory tests'
  mkdir 'tests'
fi
if test -f 'tests/ns_gcc' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/ns_gcc (file already exists)'
else
  echo 'x - extracting tests/ns_gcc (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/ns_gcc' &&
:
# @(#) $Id: ns_gcc,v 1.3 1995/07/29 06:06:41 robertl Exp $
X
CC=/usr/progressive/bin/gcc
X
for bintype in elf ""
do
X	bintype_flag="-b $bintype"
X	binname=$bintype
X	[ "$bintype" = "" ] && {
X		bintype_flag=""
X		binname="default"
X		}
X	
X	for environment in "" Xpg4plus Xpg4 Compat30 Ansi Posix
X	do
X		env_flag="-$environment"
X		case $environment in
X			Xpg4plus) 	defname=xpg4plus ;;
X			Xpg4) 		defname=xpg4 ;;
X			Compat30) 	defname=ods30 ;;
X			Ansi) 		defname=ansi ;;
X			Posix) 		defname=posix ;;
X			"")		defname=default
X					env_flag="" ;;
X			*)		echo Unknown $environment ;;
X		esac
X		./ns_args `$CC -E -v $bintype_flag $env_flag /tmp/foo.c 2>&1` | grep -v __GNUC_ > gcc.${binname}.${defname} 
X	done
done
SHAR_EOF
  $shar_touch -am 0729010695 'tests/ns_gcc' &&
  chmod 0755 'tests/ns_gcc' ||
  echo 'restore of tests/ns_gcc failed'
  shar_count="`wc -c < 'tests/ns_gcc'`"
  test 700 -eq "$shar_count" ||
    echo "tests/ns_gcc: original size 700, current size $shar_count"
fi
# ============= tests/ns_cc ==============
if test -f 'tests/ns_cc' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/ns_cc (file already exists)'
else
  echo 'x - extracting tests/ns_cc (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/ns_cc' &&
CC=/bin/cc
# @(#) $Id: ns_cc,v 1.3 1995/07/29 06:06:40 robertl Exp $
for bintype in elf ""
do
X	bintype_flag="-b $bintype"
X	binname=$bintype
X	[ "$bintype" = "" ] && {
X		bintype_flag=""
X		binname="default"
X		}
X	
X	for environment in "" xpg4plus xpg4 ods30 ansi posix
X	do
X		env_flag="-a $environment"
X		defname=$environment
X		case $environment in
#			Xpg4plus) 	defname=xpg4plus ;;
#			Xpg4) 		defname=xpg4 ;;
#			Compat30) 	defname=ods30 ;;
#			Ansi) 		defname=ansi ;;
#			Posix) 		defname=posix ;;
X			"")		defname=default
X					env_flag="" ;;
#			*)		echo Unknown $environment ;;
X		esac
X		./ns_args `$CC -# $bintype_flag $env_flag /tmp/foo.c 2>&1 ` | grep -v __GNUC_ > cc.${binname}.${defname} 
X	done
done
SHAR_EOF
  $shar_touch -am 0729010695 'tests/ns_cc' &&
  chmod 0755 'tests/ns_cc' ||
  echo 'restore of tests/ns_cc failed'
  shar_count="`wc -c < 'tests/ns_cc'`"
  test 703 -eq "$shar_count" ||
    echo "tests/ns_cc: original size 703, current size $shar_count"
fi
# ============= tests/ns_diff ==============
if test -f 'tests/ns_diff' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/ns_diff (file already exists)'
else
  echo 'x - extracting tests/ns_diff (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/ns_diff' &&
:
# @(#) $Id: ns_diff,v 1.3 1995/07/29 06:06:41 robertl Exp $
X
amdiff(){
X	echo ERROR: $1 and $2 are different.
X	sdiff -w 80 $1 $2 
}
X
for i in ansi default ods30 posix xpg4 xpg4plus
do
X	for e in elf default
X	do
X		diff cc.$e.$i gcc.$e.$i > /dev/null || amdiff cc.$e.$i gcc.$e.$i
X	done
done
SHAR_EOF
  $shar_touch -am 0729010695 'tests/ns_diff' &&
  chmod 0755 'tests/ns_diff' ||
  echo 'restore of tests/ns_diff failed'
  shar_count="`wc -c < 'tests/ns_diff'`"
  test 289 -eq "$shar_count" ||
    echo "tests/ns_diff: original size 289, current size $shar_count"
fi
# ============= tests/ns_args ==============
if test -f 'tests/ns_args' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/ns_args (file already exists)'
else
  echo 'x - extracting tests/ns_args (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/ns_args' &&
# set -x
# @(#) $Id: ns_args,v 1.3 1995/07/29 06:06:39 robertl Exp $
args=`echo $* | tr -d \'`
X
for i in $args
do
X	case $i in
X		-y0* ) echo "-I"$i | sed s/-y0,// ;;
X		-D* | -I* )	echo $i ;;
X	esac
done | sort
SHAR_EOF
  $shar_touch -am 0729010695 'tests/ns_args' &&
  chmod 0755 'tests/ns_args' ||
  echo 'restore of tests/ns_args failed'
  shar_count="`wc -c < 'tests/ns_args'`"
  test 208 -eq "$shar_count" ||
    echo "tests/ns_args: original size 208, current size $shar_count"
fi
# ============= tests/test_cdtors ==============
if test -f 'tests/test_cdtors' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/test_cdtors (file already exists)'
else
  echo 'x - extracting tests/test_cdtors (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/test_cdtors' &&
#
# Prove that C++ static constructors and destructors work right..
#
#
#
X
X
cat > /tmp/x.C << E_O_F
extern "C" {
X  void _exit(int);
X  extern int      printf(const char *, ...);
X  extern int        atexit(void (*)(void));
}
X
extern void bar();
X
void foo(void)
{
X	printf("Atexit function\n");
X	exit(3);
}
X
int i;
volatile int q ;
X
struct A {
X	char dummy;
X	A() { 
X		q = 0x12345 ;
X		printf("Initializer for A\n");
//		atexit(foo);
X		i = 1; 
X	}
X	~A() { 
X		q = 0x87654321;
X		printf("Destructor for A\n");
X		if (i == 3) 
X			i = 4 ; 
X	}
};
X
struct B {
X	char dummy;
X	B() { 
X		printf("Initializer for B\n");
X		if (i == 1) 
X			i = 2 ;
X	}
X	~B() { 
X		printf("Destructor for B\n");
X		if (i == 2) 
X			i = 3 ; 
X	}
};
X
A a;
B b;
int main() { printf("Main\n"); bar();
return 1; }
X
E_O_F
X
X
cat > /tmp/y.C << E_O_F
X
extern "C" int printf(const char *, ...);
extern int i ; 
struct C {
X	char dummy;
X	C() { 
X		printf("Initializer for C\n");
X	}
X	~C() { 
X		printf("Destructor for C\n");
X		if (i == 4)
X			_exit(0);
X	}
};
X
X
C c;
X
void bar() { printf("In bar()\n"); }
E_O_F
X
X
X
gcc        -o /tmp/x.coff /tmp/x.C /tmp/y.C  || echo Coff cdtors fail.
gcc -b elf -o /tmp/x.elf  /tmp/x.C /tmp/y.C  || echo ELF cdtors fail.
X
SHAR_EOF
  $shar_touch -am 1129220595 'tests/test_cdtors' &&
  chmod 0644 'tests/test_cdtors' ||
  echo 'restore of tests/test_cdtors failed'
  shar_count="`wc -c < 'tests/test_cdtors'`"
  test 1192 -eq "$shar_count" ||
    echo "tests/test_cdtors: original size 1192, current size $shar_count"
fi
# ============= tests/test_namespace ==============
if test -f 'tests/test_namespace' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/test_namespace (file already exists)'
else
  echo 'x - extracting tests/test_namespace (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/test_namespace' &&
:
# @(#) $Id: test_namespace,v 1.3 1995/07/29 06:06:42 robertl Exp $
X
# obviously, this file doesn't do anything "hard".
# It calls the programs that build a set of files for each 
# compiler (cc and gcc) with the interesting sets of arguments.
# Then, a sdiff is performed on each, allowing (ok, requiring)
# the human user to "OK" the differences.  
#
# The notable exception to the "namespace must be identical" rule
# is that GCC will always define __GNUC__ and __GNUC_MINOR__.  These
# are filtered out for us.
#
X
X./ns_cc
X./ns_gcc
X./ns_diff
SHAR_EOF
  $shar_touch -am 0729010695 'tests/test_namespace' &&
  chmod 0755 'tests/test_namespace' ||
  echo 'restore of tests/test_namespace failed'
  shar_count="`wc -c < 'tests/test_namespace'`"
  test 546 -eq "$shar_count" ||
    echo "tests/test_namespace: original size 546, current size $shar_count"
fi
# ============= tests/test_types ==============
if test -f 'tests/test_types' && test X"$1" != X"-c"; then
  echo 'x - skipping tests/test_types (file already exists)'
else
  echo 'x - extracting tests/test_types (text)'
  sed 's/^X//' << 'SHAR_EOF' > 'tests/test_types' &&
:
# @(#) $Id: test_types,v 1.3 1995/07/29 06:06:43 robertl Exp $
# set -x
X
CC=/usr/progressive/bin/gcc
X
verify_object() {
case "$2" in
X	*elf*) file $1 | grep ELF 	|| echo "ERROR: Expected ELF" ;;
X	*) file $1 | grep "iAPX 386" 	|| echo "ERROR: Expected COFF" ;;
esac
X
}
X
verify_libe() {
case "$2" in
X	*ansi*) what $1 | grep values-Xc.c || echo "ERROR: Expected -Xc for $2" ;;
X	*traditional*) what $1 | grep values-Xt.c || echo "ERROR: Expected -Xt for $2" ;;
X	*) what $1 | grep values-Xa.c || echo "ERROR: Expected -Xa for $2" ;;
esac
}
X
echo  "main(){printf(\"Hello, World\\n\");}" > /tmp/f.c
X
for object in "" "-b elf"
do
X	for environment in "-ansi" "-traditional" ""
X	do
X		rm -f a.out
X		$CC $object $environment /tmp/f.c 
X		verify_object a.out "$object" 
X		verify_libe   a.out "$environment" 
X	done
done 
X
SHAR_EOF
  $shar_touch -am 0729010695 'tests/test_types' &&
  chmod 0755 'tests/test_types' ||
  echo 'restore of tests/test_types failed'
  shar_count="`wc -c < 'tests/test_types'`"
  test 808 -eq "$shar_count" ||
    echo "tests/test_types: original size 808, current size $shar_count"
fi
exit 0
