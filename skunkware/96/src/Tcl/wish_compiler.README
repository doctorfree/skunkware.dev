This package contains the files needed to build a self-contained
"wish" application binary, that can be run even if tcl, tk and wish
(TCL7.0/TK3.3) are not installed on the target system.

The package consists of:
  tcl2c        a csh script for turning tcl code into C strings
  tkAppInit.c  Modified to use "compiled in" initialization files
  tkMain.c     Modified to use "compiled in" wish script
  Makefile     For "compiling" your wish scripts
  README       This file

To build a stand-alone binary:
*  Edit Makefile to reflect the locations of TK, TCL and X11 on your system
*  create a wish script (with a .tcl suffix) that you wish to "compile".
*  make PROG=foo
   Where "foo.tcl" is the name of your script, "foo", is the name of the 
   executable created, as well as the name of the application (e.g. send).

The binary "foo" accepts the same arguments as standard wish, except for "-f".


Notes:
  The profile.ps file called in tkCanvPs.c is not yet compiled in.

  The included files init.tcl and tk.tcl are the stock initialization
  files for tcl7.0/tk3.3 minus the checks for valid file version with
  all of the normally auto-loaded functions included.  If your application
  auto-loads additional functions, put them here, if you don't need some
  of the "standard" ones, you may take them out.

  This works with TK3.3 and TCL7.0

  "make wish" builds a wish with the tcl and tk initialization files
  compiled in.

  tcl2c is a modified version of the script posted to comp.lang.tcl
  to convert tcl programs to compilable C strings

  This was tested on SunOS 4.1.3

comments, suggestions to:
  Stephen Uhler
  sau@bellcore.com
