HOW TO COMPILE & INSTALL ELVIS 2.0o-beta

Separate sets of instructions are provided below for UNIX, Windows-NT, and
MS-DOS.

For Win32 and MS-DOS, I've constructed batch files which, when run, cause
the programs to be compiled.  This is the preferred way to compile elvis
and its related programs.  However, you can also use MSVC++'s interactive
development environment if you prefer.  Separate instructions are given
for both compilation methods, for both operating systems.

All of these instructions assume that you have already unpacked the files
from the source code archive, "elvis-2.0o.tgz".  That's a gzipped tar archive.
If you don't have the gzip and tar utilities, then the easiest way for you
to unpack them is to compile the "untar.c" program (available via anonymous
FTP from ftp://ftp.cs.pdx.edu/pub/elvis/unreleased/untar.c).  The files will
be placed in a subdirectory named "elvis-2.0o".  The MS-DOS *.MAK files
assume that you've unpacked them while in C:\MSVC, so the files themselves
should end up in C:\MSVC\elvis2.0o.

================================================================================

UNIX
     1) Run the "configure" shell script to create "Makefile" and "config.h"
	files.  I tried to make this "configure" script work about the same
	as GNU ones.  For a complete list of options, run "configure -?"

     2)	Give the command "make".  This should eventually produce programs
	named "elvis" and "ref".  Source code is also included for "ctags"
	and "fmt" but these aren't normally compiled because your UNIX system
	probably already has better versions of them.  If you want to use
	elvis' versions of "ctags" and "fmt" then you should edit the Makefile
	to add those programs to the definition of the ALL macro.

	Exception: Linux gets all four programs by default, because the
	versions of "ctags" and "fmt" distributed with Linux actually came
	from elvis 1.8, so the 2.0 versions are newer.

     3)	You should be able to run "elvis" in the source code directory now.
	Try "e2 README.html" or "e2 config.h".

	Note that we're running the e2 shell script instead of the elvis
	executable.  e2 simply runs elvis in such a way that it looks for
	its support files in the "lib" subdirectory, instead of the usual
	directory.

     4) If all goes well, you can install the beta-test version by becoming
	the superuser and running the command "make install".  (Later, if you
	decide to uninstall it you can do so via the command "make uninstall".)

	 --------------------------------------------------------------------
	| NOTE: If you want to compile elvis with multiple configurations,   |
	| you should compile it with each configuration separately, and then |
	| rename the executables, and "make clean" before running the        |
	| configure script for the next configuration.  For example, to make |
	| elvis both with and without X-windows, you could...                |
	|                                                                    |
	|	configure --with-x linux                                     |
	|	make                                                         |
	|	mv elvis xelvis                                              |
	|	make clean                                                   |
	|	configure --with-x=no linux                                  |
	|	make                                                         |
	 --------------------------------------------------------------------

================================================================================

MS-Windows/NT (or Windows95?), with Visual C++ 2.0 (Method #1):
     1)	Run the "makwin32.bat" file.

		makwin32

     2) You can install elvis.exe by copying it into some directory in your
	executation path, and the "lib" files into a subdirectory named "lib"
	under the directory where you installed elvis.exe.  The following
	commands are APPROXIMATELY what you need to do:

		mkdir \localbin
		copy *.exe \localbin
		path %path%;\localbin
		mkdir \localbin\lib
		copy lib\*.* \localbin\lib


MS-Windows/NT (or Windows95?), with Visual C++ 2.0 (Method #2):
     1)	Copy all of the "*.mak" files from files from the oswin32 subdirectory.

		copy oswin32\*.mak

     2)	Copy the file "osconfig.h" from the oswin32 directory to "config.h"
	(without the initial "os") in the current directory.

		copy oswin32\osconfig.h config.h

     3)	Start Visual C++ 2.0, and open the "elvis.mak" file.  Select the
	"Release" target.

     4)	Select the "Project->Build elvis.exe" menu item, and wait a while.
	Eventually this should give you an "elvis.exe" program in the
	WinRel subdirectory.  You can test this program from inside
	VC++ via the <F5> key.

     5) Repeat steps 3 and 4 for the "ctags.mak", "ref.mak", and "fmt.mak"
	files.

     6) You can install elvis.exe by copying it into some directory in your
	executation path, and the "lib" files into a subdirectory named "lib"
	under the execution directory.  The following commands are
	APPROXIMATELY what you need to do:

		mkdir \localbin
		copy WinRel\*.exe \localbin
		copy *.exe \localbin
		path %path%;\localbin
		mkdir \localbin\lib
		copy lib\*.* \localbin\lib

================================================================================

MS-DOS, using Visual C++ 1.5 (Method #1):
     REMINDER: MSVC++ 1.5 always puts the complete pathnames of all files into
	its NMAKE files.  Because of this, you *MUST* install the source code
	into a directory named "C:\MSVC\elvis2.0o".  The "elvis2.0o" component
	of that directory name is stored in the "elvis-2.0o.tgz" archive file,
	so you should be in the C:\MSVC directory when you extract the files.
	After extracting the files, do a "cd elvis2.0o"

     1) Run the "makmsdos.bat" file

		makmsdos

     2) You can install elvis by copying the *.EXE files into some directory
	in your execution path, and copying the "lib" files into a subdirectory
	named "lib" under the directory where you installed the *.EXE files.
	The following commands are APPROXIMATELY what you need to do:

		mkdir \localbin
		copy *.exe \localbin
		mkdir \localbin\lib
		copy \lib\*.* \localbin\lib
		path {OLD PATH HERE};\localbin


MS-DOS, using Visual C++ 1.5 (Method #2):
     REMINDER: MSVC++ 1.5 always puts the complete pathnames of all files into
	its NMAKE files.  Because of this, you *MUST* install the source code
	into a directory named "C:\MSVC\elvis2.0o".  The "elvis2.0o" component
	of that directory name is stored in the "elvis-2.0o.tgz" archive file,
	so you should be in the C:\MSVC directory when you extract the files.

     1) Copy all of the "C:\MSVC\elvis2.0o\OSMSDOS\*.MAK" files into the
	"C:\MSVC\elvis2.0o" directory.

		c:
		cd \msvc\elvis2.0o
		copy osmsdos\*.mak

     2)	Copy the "\MSVC\elvis-2.0o\OSMSDOS\OSCONFIG.H" file to
	"\MSVC\elvis-2.0o\CONFIG.H" Note that the "OS" is dropped from the
	filename.

		copy osmsdos\osconfig.h config.h

     3) Start Visual C++ 1.5, and open the "ELVIS.MAK" project.

     4)	Select the "Project->Build ELVIS.EXE" menu item, and wait a while.
	Eventually this should give you an "ELVIS.EXE" program in the
	current directory.  You can test this program from inside VC++
	via the <F5> key.

     5)	Repeat steps 3 and 4 for "CTAGS.MAK", "REF.MAK", and "FMT.MAK".

     6) You can install elvis by copying the *.EXE files into some directory
	in your execution path, and copying the "lib" files into a subdirectory
	named "lib" under the directory where you installed the *.EXE files.
	The following commands are APPROXIMATELY what you need to do:

		mkdir \localbin
		copy *.exe \localbin
		mkdir \localbin\lib
		copy \lib\*.* \localbin\lib
		path {OLD PATH HERE};\localbin
